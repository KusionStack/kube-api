---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: rolloutstrategies.rollout.kusionstack.io
spec:
  group: rollout.kusionstack.io
  names:
    kind: RolloutStrategy
    listKind: RolloutStrategyList
    plural: rolloutstrategies
    shortNames:
    - ros
    singular: rolloutstrategy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RolloutStrategy is the Schema for the rolloutstrategies API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          batch:
            description: Batch is the batch strategy for upgrade and operation
            properties:
              batches:
                description: Batches define the order of phases to execute release
                  in canary release
                items:
                  description: Custom release step
                  properties:
                    breakpoint:
                      description: If set to true, the rollout will be paused before
                        the step starts.
                      type: boolean
                    matchTargets:
                      description: Match defines condition used for matching resource
                        cross clusterset
                      properties:
                        names:
                          description: Names is a list of workload name
                          items:
                            description: CrossClusterObjectNameReference contains
                              cluster and name reference to a k8s object
                            properties:
                              cluster:
                                description: Cluster indicates the name of cluster
                                type: string
                              name:
                                description: Name is the resource name
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                        selector:
                          description: Selector is a label query over a set of resources,
                            in this case resource
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    properties:
                      additionalProperties:
                        type: string
                      description: Properties contains additional information for
                        step
                      type: object
                    replicaSlidingWindow:
                      anyOf:
                      - type: integer
                      - type: string
                      description: |-
                        ReplicaSlidingWindow used to control the number of pods that are allowed to be upgraded in
                        a sliding window for progressive rollout smoothly.
                      x-kubernetes-int-or-string: true
                    replicas:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Replicas is the replicas of the rollout task, which
                        represents the number of pods to be upgraded
                      x-kubernetes-int-or-string: true
                    traffic:
                      description: traffic strategy
                      properties:
                        http:
                          properties:
                            baseTraffic:
                              properties:
                                filters:
                                  description: |-
                                    Filters define the filters that are applied to requests that match
                                    this rule.


                                    The effects of ordering of multiple behaviors are currently unspecified.
                                    This can change in the future based on feedback during the alpha stage.


                                    Conformance-levels at this level are defined based on the type of filter:


                                    - ALL core filters MUST be supported by all implementations.
                                    - Implementers are encouraged to support extended filters.
                                    - Implementation-specific custom filters have no API guarantees across
                                      implementations.


                                    Specifying the same filter multiple times is not supported unless explicitly
                                    indicated in the filter.


                                    All filters are expected to be compatible with each other except for the
                                    URLRewrite and RequestRedirect filters, which may not be combined. If an
                                    implementation can not support other combinations of filters, they must clearly
                                    document that limitation. In cases where incompatible or unsupported
                                    filters are specified and cause the `Accepted` condition to be set to status
                                    `False`, implementations may use the `IncompatibleFilters` reason to specify
                                    this configuration error.


                                    Support: Core
                                  items:
                                    description: |-
                                      HTTPRouteFilter defines processing steps that must be completed during the
                                      request or response lifecycle. HTTPRouteFilters are meant as an extension
                                      point to express processing that may be done in Gateway implementations. Some
                                      examples include request or response modification, implementing
                                      authentication strategies, rate-limiting, and traffic shaping. API
                                      guarantee/conformance is defined based on the type of the filter.


                                      <gateway:experimental:validation:XValidation:message="filter.cors must be nil if the filter.type is not CORS",rule="!(has(self.cors) && self.type != 'CORS')">
                                      <gateway:experimental:validation:XValidation:message="filter.cors must be specified for CORS filter.type",rule="!(!has(self.cors) && self.type == 'CORS')">
                                    properties:
                                      cors:
                                        description: |-
                                          CORS defines a schema for a filter that responds to the
                                          cross-origin request based on HTTP response header.


                                          Support: Extended


                                          <gateway:experimental>
                                        properties:
                                          allowCredentials:
                                            description: |-
                                              AllowCredentials indicates whether the actual cross-origin request allows
                                              to include credentials.


                                              The only valid value for the `Access-Control-Allow-Credentials` response
                                              header is true (case-sensitive).


                                              If the credentials are not allowed in cross-origin requests, the gateway
                                              will omit the header `Access-Control-Allow-Credentials` entirely rather
                                              than setting its value to false.


                                              Support: Extended
                                            enum:
                                            - true
                                            type: boolean
                                          allowHeaders:
                                            description: |-
                                              AllowHeaders indicates which HTTP request headers are supported for
                                              accessing the requested resource.


                                              Header names are not case sensitive.


                                              Multiple header names in the value of the `Access-Control-Allow-Headers`
                                              response header are separated by a comma (",").


                                              When the `AllowHeaders` field is configured with one or more headers, the
                                              gateway must return the `Access-Control-Allow-Headers` response header
                                              which value is present in the `AllowHeaders` field.


                                              If any header name in the `Access-Control-Request-Headers` request header
                                              is not included in the list of header names specified by the response
                                              header `Access-Control-Allow-Headers`, it will present an error on the
                                              client side.


                                              If any header name in the `Access-Control-Allow-Headers` response header
                                              does not recognize by the client, it will also occur an error on the
                                              client side.


                                              A wildcard indicates that the requests with all HTTP headers are allowed.
                                              The `Access-Control-Allow-Headers` response header can only use `*`
                                              wildcard as value when the `AllowCredentials` field is unspecified.


                                              When the `AllowCredentials` field is specified and `AllowHeaders` field
                                              specified with the `*` wildcard, the gateway must specify one or more
                                              HTTP headers in the value of the `Access-Control-Allow-Headers` response
                                              header. The value of the header `Access-Control-Allow-Headers` is same as
                                              the `Access-Control-Request-Headers` header provided by the client. If
                                              the header `Access-Control-Request-Headers` is not included in the
                                              request, the gateway will omit the `Access-Control-Allow-Headers`
                                              response header, instead of specifying the `*` wildcard. A Gateway
                                              implementation may choose to add implementation-specific default headers.


                                              Support: Extended
                                            items:
                                              description: |-
                                                HTTPHeaderName is the name of an HTTP header.


                                                Valid values include:


                                                * "Authorization"
                                                * "Set-Cookie"


                                                Invalid values include:


                                                  - ":method" - ":" is an invalid character. This means that HTTP/2 pseudo
                                                    headers are not currently supported by this type.
                                                  - "/invalid" - "/ " is an invalid character
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            maxItems: 64
                                            type: array
                                            x-kubernetes-list-type: set
                                          allowMethods:
                                            description: |-
                                              AllowMethods indicates which HTTP methods are supported for accessing the
                                              requested resource.


                                              Valid values are any method defined by RFC9110, along with the special
                                              value `*`, which represents all HTTP methods are allowed.


                                              Method names are case sensitive, so these values are also case-sensitive.
                                              (See https://www.rfc-editor.org/rfc/rfc2616#section-5.1.1)


                                              Multiple method names in the value of the `Access-Control-Allow-Methods`
                                              response header are separated by a comma (",").


                                              A CORS-safelisted method is a method that is `GET`, `HEAD`, or `POST`.
                                              (See https://fetch.spec.whatwg.org/#cors-safelisted-method) The
                                              CORS-safelisted methods are always allowed, regardless of whether they
                                              are specified in the `AllowMethods` field.


                                              When the `AllowMethods` field is configured with one or more methods, the
                                              gateway must return the `Access-Control-Allow-Methods` response header
                                              which value is present in the `AllowMethods` field.


                                              If the HTTP method of the `Access-Control-Request-Method` request header
                                              is not included in the list of methods specified by the response header
                                              `Access-Control-Allow-Methods`, it will present an error on the client
                                              side.


                                              The `Access-Control-Allow-Methods` response header can only use `*`
                                              wildcard as value when the `AllowCredentials` field is unspecified.


                                              When the `AllowCredentials` field is specified and `AllowMethods` field
                                              specified with the `*` wildcard, the gateway must specify one HTTP method
                                              in the value of the Access-Control-Allow-Methods response header. The
                                              value of the header `Access-Control-Allow-Methods` is same as the
                                              `Access-Control-Request-Method` header provided by the client. If the
                                              header `Access-Control-Request-Method` is not included in the request,
                                              the gateway will omit the `Access-Control-Allow-Methods` response header,
                                              instead of specifying the `*` wildcard. A Gateway implementation may
                                              choose to add implementation-specific default methods.


                                              Support: Extended
                                            items:
                                              enum:
                                              - GET
                                              - HEAD
                                              - POST
                                              - PUT
                                              - DELETE
                                              - CONNECT
                                              - OPTIONS
                                              - TRACE
                                              - PATCH
                                              - '*'
                                              type: string
                                            maxItems: 9
                                            type: array
                                            x-kubernetes-list-type: set
                                            x-kubernetes-validations:
                                            - message: AllowMethods cannot contain
                                                '*' alongside other methods
                                              rule: '!(''*'' in self && self.size()
                                                > 1)'
                                          allowOrigins:
                                            description: |-
                                              AllowOrigins indicates whether the response can be shared with requested
                                              resource from the given `Origin`.


                                              The `Origin` consists of a scheme and a host, with an optional port, and
                                              takes the form `<scheme>://<host>(:<port>)`.


                                              Valid values for scheme are: `http` and `https`.


                                              Valid values for port are any integer between 1 and 65535 (the list of
                                              available TCP/UDP ports). Note that, if not included, port `80` is
                                              assumed for `http` scheme origins, and port `443` is assumed for `https`
                                              origins. This may affect origin matching.


                                              The host part of the origin may contain the wildcard character `*`. These
                                              wildcard characters behave as follows:


                                              * `*` is a greedy match to the _left_, including any number of
                                                DNS labels to the left of its position. This also means that
                                                `*` will include any number of period `.` characters to the
                                                left of its position.
                                              * A wildcard by itself matches all hosts.


                                              An origin value that includes _only_ the `*` character indicates requests
                                              from all `Origin`s are allowed.


                                              When the `AllowOrigins` field is configured with multiple origins, it
                                              means the server supports clients from multiple origins. If the request
                                              `Origin` matches the configured allowed origins, the gateway must return
                                              the given `Origin` and sets value of the header
                                              `Access-Control-Allow-Origin` same as the `Origin` header provided by the
                                              client.


                                              The status code of a successful response to a "preflight" request is
                                              always an OK status (i.e., 204 or 200).


                                              If the request `Origin` does not match the configured allowed origins,
                                              the gateway returns 204/200 response but doesn't set the relevant
                                              cross-origin response headers. Alternatively, the gateway responds with
                                              403 status to the "preflight" request is denied, coupled with omitting
                                              the CORS headers. The cross-origin request fails on the client side.
                                              Therefore, the client doesn't attempt the actual cross-origin request.


                                              The `Access-Control-Allow-Origin` response header can only use `*`
                                              wildcard as value when the `AllowCredentials` field is unspecified.


                                              When the `AllowCredentials` field is specified and `AllowOrigins` field
                                              specified with the `*` wildcard, the gateway must return a single origin
                                              in the value of the `Access-Control-Allow-Origin` response header,
                                              instead of specifying the `*` wildcard. The value of the header
                                              `Access-Control-Allow-Origin` is same as the `Origin` header provided by
                                              the client.


                                              Support: Extended
                                            items:
                                              description: |-
                                                The AbsoluteURI MUST NOT be a relative URI, and it MUST follow the URI syntax and
                                                encoding rules specified in RFC3986.  The AbsoluteURI MUST include both a
                                                scheme (e.g., "http" or "spiffe") and a scheme-specific-part.  URIs that
                                                include an authority MUST include a fully qualified domain name or
                                                IP address as the host.
                                                <gateway:util:excludeFromCRD> The below regex is taken from the regex section in RFC 3986 with a slight modification to enforce a full URI and not relative. </gateway:util:excludeFromCRD>
                                              maxLength: 253
                                              minLength: 1
                                              pattern: ^(([^:/?#]+):)(//([^/?#]*))([^?#]*)(\?([^#]*))?(#(.*))?
                                              type: string
                                            maxItems: 64
                                            type: array
                                            x-kubernetes-list-type: set
                                          exposeHeaders:
                                            description: |-
                                              ExposeHeaders indicates which HTTP response headers can be exposed
                                              to client-side scripts in response to a cross-origin request.


                                              A CORS-safelisted response header is an HTTP header in a CORS response
                                              that it is considered safe to expose to the client scripts.
                                              The CORS-safelisted response headers include the following headers:
                                              `Cache-Control`
                                              `Content-Language`
                                              `Content-Length`
                                              `Content-Type`
                                              `Expires`
                                              `Last-Modified`
                                              `Pragma`
                                              (See https://fetch.spec.whatwg.org/#cors-safelisted-response-header-name)
                                              The CORS-safelisted response headers are exposed to client by default.


                                              When an HTTP header name is specified using the `ExposeHeaders` field,
                                              this additional header will be exposed as part of the response to the
                                              client.


                                              Header names are not case sensitive.


                                              Multiple header names in the value of the `Access-Control-Expose-Headers`
                                              response header are separated by a comma (",").


                                              A wildcard indicates that the responses with all HTTP headers are exposed
                                              to clients. The `Access-Control-Expose-Headers` response header can only
                                              use `*` wildcard as value when the `AllowCredentials` field is
                                              unspecified.


                                              Support: Extended
                                            items:
                                              description: |-
                                                HTTPHeaderName is the name of an HTTP header.


                                                Valid values include:


                                                * "Authorization"
                                                * "Set-Cookie"


                                                Invalid values include:


                                                  - ":method" - ":" is an invalid character. This means that HTTP/2 pseudo
                                                    headers are not currently supported by this type.
                                                  - "/invalid" - "/ " is an invalid character
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            maxItems: 64
                                            type: array
                                            x-kubernetes-list-type: set
                                          maxAge:
                                            default: 5
                                            description: |-
                                              MaxAge indicates the duration (in seconds) for the client to cache the
                                              results of a "preflight" request.


                                              The information provided by the `Access-Control-Allow-Methods` and
                                              `Access-Control-Allow-Headers` response headers can be cached by the
                                              client until the time specified by `Access-Control-Max-Age` elapses.


                                              The default value of `Access-Control-Max-Age` response header is 5
                                              (seconds).
                                            format: int32
                                            minimum: 1
                                            type: integer
                                        type: object
                                      extensionRef:
                                        description: |-
                                          ExtensionRef is an optional, implementation-specific extension to the
                                          "filter" behavior.  For example, resource "myroutefilter" in group
                                          "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                          extended filters.


                                          This filter can be used multiple times within the same rule.


                                          Support: Implementation-specific
                                        properties:
                                          group:
                                            description: |-
                                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                              When unspecified or empty string, core API group is inferred.
                                            maxLength: 253
                                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                            type: string
                                          kind:
                                            description: Kind is kind of the referent.
                                              For example "HTTPRoute" or "Service".
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                            type: string
                                          name:
                                            description: Name is the name of the referent.
                                            maxLength: 253
                                            minLength: 1
                                            type: string
                                        required:
                                        - group
                                        - kind
                                        - name
                                        type: object
                                      requestHeaderModifier:
                                        description: |-
                                          RequestHeaderModifier defines a schema for a filter that modifies request
                                          headers.


                                          Support: Core
                                        properties:
                                          add:
                                            description: |-
                                              Add adds the given header(s) (name, value) to the request
                                              before the action. It appends to any existing values associated
                                              with the header name.


                                              Input:
                                                GET /foo HTTP/1.1
                                                my-header: foo


                                              Config:
                                                add:
                                                - name: "my-header"
                                                  value: "bar,baz"


                                              Output:
                                                GET /foo HTTP/1.1
                                                my-header: foo,bar,baz
                                            items:
                                              description: HTTPHeader represents an
                                                HTTP Header name and value as defined
                                                by RFC 7230.
                                              properties:
                                                name:
                                                  description: |-
                                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                    case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                                    If multiple entries specify equivalent header names, the first entry with
                                                    an equivalent name MUST be considered for a match. Subsequent entries
                                                    with an equivalent header name MUST be ignored. Due to the
                                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                                    equivalent.
                                                  maxLength: 256
                                                  minLength: 1
                                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                                  type: string
                                                value:
                                                  description: Value is the value
                                                    of HTTP Header to be matched.
                                                  maxLength: 4096
                                                  minLength: 1
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            maxItems: 16
                                            type: array
                                            x-kubernetes-list-map-keys:
                                            - name
                                            x-kubernetes-list-type: map
                                          remove:
                                            description: |-
                                              Remove the given header(s) from the HTTP request before the action. The
                                              value of Remove is a list of HTTP header names. Note that the header
                                              names are case-insensitive (see
                                              https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                              Input:
                                                GET /foo HTTP/1.1
                                                my-header1: foo
                                                my-header2: bar
                                                my-header3: baz


                                              Config:
                                                remove: ["my-header1", "my-header3"]


                                              Output:
                                                GET /foo HTTP/1.1
                                                my-header2: bar
                                            items:
                                              type: string
                                            maxItems: 16
                                            type: array
                                            x-kubernetes-list-type: set
                                          set:
                                            description: |-
                                              Set overwrites the request with the given header (name, value)
                                              before the action.


                                              Input:
                                                GET /foo HTTP/1.1
                                                my-header: foo


                                              Config:
                                                set:
                                                - name: "my-header"
                                                  value: "bar"


                                              Output:
                                                GET /foo HTTP/1.1
                                                my-header: bar
                                            items:
                                              description: HTTPHeader represents an
                                                HTTP Header name and value as defined
                                                by RFC 7230.
                                              properties:
                                                name:
                                                  description: |-
                                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                    case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                                    If multiple entries specify equivalent header names, the first entry with
                                                    an equivalent name MUST be considered for a match. Subsequent entries
                                                    with an equivalent header name MUST be ignored. Due to the
                                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                                    equivalent.
                                                  maxLength: 256
                                                  minLength: 1
                                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                                  type: string
                                                value:
                                                  description: Value is the value
                                                    of HTTP Header to be matched.
                                                  maxLength: 4096
                                                  minLength: 1
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            maxItems: 16
                                            type: array
                                            x-kubernetes-list-map-keys:
                                            - name
                                            x-kubernetes-list-type: map
                                        type: object
                                      requestMirror:
                                        description: |-
                                          RequestMirror defines a schema for a filter that mirrors requests.
                                          Requests are sent to the specified destination, but responses from
                                          that destination are ignored.


                                          This filter can be used multiple times within the same rule. Note that
                                          not all implementations will be able to support mirroring to multiple
                                          backends.


                                          Support: Extended
                                        properties:
                                          backendRef:
                                            description: |-
                                              BackendRef references a resource where mirrored requests are sent.


                                              Mirrored requests must be sent only to a single destination endpoint
                                              within this BackendRef, irrespective of how many endpoints are present
                                              within this BackendRef.


                                              If the referent cannot be found, this BackendRef is invalid and must be
                                              dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                              condition on the Route status is set to `status: False` and not configure
                                              this backend in the underlying implementation.


                                              If there is a cross-namespace reference to an *existing* object
                                              that is not allowed by a ReferenceGrant, the controller must ensure the
                                              "ResolvedRefs"  condition on the Route is set to `status: False`,
                                              with the "RefNotPermitted" reason and not configure this backend in the
                                              underlying implementation.


                                              In either error case, the Message of the `ResolvedRefs` Condition
                                              should be used to provide more detail about the problem.


                                              Support: Extended for Kubernetes Service


                                              Support: Implementation-specific for any other resource
                                            properties:
                                              group:
                                                default: ""
                                                description: |-
                                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                                  When unspecified or empty string, core API group is inferred.
                                                maxLength: 253
                                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                                type: string
                                              kind:
                                                default: Service
                                                description: |-
                                                  Kind is the Kubernetes resource kind of the referent. For example
                                                  "Service".


                                                  Defaults to "Service" when not specified.


                                                  ExternalName services can refer to CNAME DNS records that may live
                                                  outside of the cluster and as such are difficult to reason about in
                                                  terms of conformance. They also may not be safe to forward to (see
                                                  CVE-2021-25740 for more information). Implementations SHOULD NOT
                                                  support ExternalName Services.


                                                  Support: Core (Services with a type other than ExternalName)


                                                  Support: Implementation-specific (Services with type ExternalName)
                                                maxLength: 63
                                                minLength: 1
                                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                                type: string
                                              name:
                                                description: Name is the name of the
                                                  referent.
                                                maxLength: 253
                                                minLength: 1
                                                type: string
                                              namespace:
                                                description: |-
                                                  Namespace is the namespace of the backend. When unspecified, the local
                                                  namespace is inferred.


                                                  Note that when a namespace different than the local namespace is specified,
                                                  a ReferenceGrant object is required in the referent namespace to allow that
                                                  namespace's owner to accept the reference. See the ReferenceGrant
                                                  documentation for details.


                                                  Support: Core
                                                maxLength: 63
                                                minLength: 1
                                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                                type: string
                                              port:
                                                description: |-
                                                  Port specifies the destination port number to use for this resource.
                                                  Port is required when the referent is a Kubernetes Service. In this
                                                  case, the port number is the service port number, not the target port.
                                                  For other resources, destination port might be derived from the referent
                                                  resource or this field.
                                                format: int32
                                                maximum: 65535
                                                minimum: 1
                                                type: integer
                                            required:
                                            - name
                                            type: object
                                            x-kubernetes-validations:
                                            - message: Must have port for Service
                                                reference
                                              rule: '(size(self.group) == 0 && self.kind
                                                == ''Service'') ? has(self.port) :
                                                true'
                                          fraction:
                                            description: |-
                                              Fraction represents the fraction of requests that should be
                                              mirrored to BackendRef.


                                              Only one of Fraction or Percent may be specified. If neither field
                                              is specified, 100% of requests will be mirrored.
                                            properties:
                                              denominator:
                                                default: 100
                                                format: int32
                                                minimum: 1
                                                type: integer
                                              numerator:
                                                format: int32
                                                minimum: 0
                                                type: integer
                                            required:
                                            - numerator
                                            type: object
                                            x-kubernetes-validations:
                                            - message: numerator must be less than
                                                or equal to denominator
                                              rule: self.numerator <= self.denominator
                                          percent:
                                            description: |-
                                              Percent represents the percentage of requests that should be
                                              mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                              requests) and its maximum value is 100 (indicating 100% of requests).


                                              Only one of Fraction or Percent may be specified. If neither field
                                              is specified, 100% of requests will be mirrored.
                                            format: int32
                                            maximum: 100
                                            minimum: 0
                                            type: integer
                                        required:
                                        - backendRef
                                        type: object
                                        x-kubernetes-validations:
                                        - message: Only one of percent or fraction
                                            may be specified in HTTPRequestMirrorFilter
                                          rule: '!(has(self.percent) && has(self.fraction))'
                                      requestRedirect:
                                        description: |-
                                          RequestRedirect defines a schema for a filter that responds to the
                                          request with an HTTP redirection.


                                          Support: Core
                                        properties:
                                          hostname:
                                            description: |-
                                              Hostname is the hostname to be used in the value of the `Location`
                                              header in the response.
                                              When empty, the hostname in the `Host` header of the request is used.


                                              Support: Core
                                            maxLength: 253
                                            minLength: 1
                                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                            type: string
                                          path:
                                            description: |-
                                              Path defines parameters used to modify the path of the incoming request.
                                              The modified path is then used to construct the `Location` header. When
                                              empty, the request path is used as-is.


                                              Support: Extended
                                            properties:
                                              replaceFullPath:
                                                description: |-
                                                  ReplaceFullPath specifies the value with which to replace the full path
                                                  of a request during a rewrite or redirect.
                                                maxLength: 1024
                                                type: string
                                              replacePrefixMatch:
                                                description: |-
                                                  ReplacePrefixMatch specifies the value with which to replace the prefix
                                                  match of a request during a rewrite or redirect. For example, a request
                                                  to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                                  of "/xyz" would be modified to "/xyz/bar".


                                                  Note that this matches the behavior of the PathPrefix match type. This
                                                  matches full path elements. A path element refers to the list of labels
                                                  in the path split by the `/` separator. When specified, a trailing `/` is
                                                  ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                                  match the prefix `/abc`, but the path `/abcd` would not.


                                                  ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                                  Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                                  the implementation setting the Accepted Condition for the Route to `status: False`.


                                                  Request Path | Prefix Match | Replace Prefix | Modified Path
                                                  -------------|--------------|----------------|----------
                                                  /foo/bar     | /foo         | /xyz           | /xyz/bar
                                                  /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                                  /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                                  /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                                  /foo         | /foo         | /xyz           | /xyz
                                                  /foo/        | /foo         | /xyz           | /xyz/
                                                  /foo/bar     | /foo         | <empty string> | /bar
                                                  /foo/        | /foo         | <empty string> | /
                                                  /foo         | /foo         | <empty string> | /
                                                  /foo/        | /foo         | /              | /
                                                  /foo         | /foo         | /              | /
                                                maxLength: 1024
                                                type: string
                                              type:
                                                description: |-
                                                  Type defines the type of path modifier. Additional types may be
                                                  added in a future release of the API.


                                                  Note that values may be added to this enum, implementations
                                                  must ensure that unknown values will not cause a crash.


                                                  Unknown values here must result in the implementation setting the
                                                  Accepted Condition for the Route to `status: False`, with a
                                                  Reason of `UnsupportedValue`.
                                                enum:
                                                - ReplaceFullPath
                                                - ReplacePrefixMatch
                                                type: string
                                            required:
                                            - type
                                            type: object
                                            x-kubernetes-validations:
                                            - message: replaceFullPath must be specified
                                                when type is set to 'ReplaceFullPath'
                                              rule: 'self.type == ''ReplaceFullPath''
                                                ? has(self.replaceFullPath) : true'
                                            - message: type must be 'ReplaceFullPath'
                                                when replaceFullPath is set
                                              rule: 'has(self.replaceFullPath) ? self.type
                                                == ''ReplaceFullPath'' : true'
                                            - message: replacePrefixMatch must be
                                                specified when type is set to 'ReplacePrefixMatch'
                                              rule: 'self.type == ''ReplacePrefixMatch''
                                                ? has(self.replacePrefixMatch) : true'
                                            - message: type must be 'ReplacePrefixMatch'
                                                when replacePrefixMatch is set
                                              rule: 'has(self.replacePrefixMatch)
                                                ? self.type == ''ReplacePrefixMatch''
                                                : true'
                                          port:
                                            description: |-
                                              Port is the port to be used in the value of the `Location`
                                              header in the response.


                                              If no port is specified, the redirect port MUST be derived using the
                                              following rules:


                                              * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                                port associated with the redirect scheme. Specifically "http" to port 80
                                                and "https" to port 443. If the redirect scheme does not have a
                                                well-known port, the listener port of the Gateway SHOULD be used.
                                              * If redirect scheme is empty, the redirect port MUST be the Gateway
                                                Listener port.


                                              Implementations SHOULD NOT add the port number in the 'Location'
                                              header in the following cases:


                                              * A Location header that will use HTTP (whether that is determined via
                                                the Listener protocol or the Scheme field) _and_ use port 80.
                                              * A Location header that will use HTTPS (whether that is determined via
                                                the Listener protocol or the Scheme field) _and_ use port 443.


                                              Support: Extended
                                            format: int32
                                            maximum: 65535
                                            minimum: 1
                                            type: integer
                                          scheme:
                                            description: |-
                                              Scheme is the scheme to be used in the value of the `Location` header in
                                              the response. When empty, the scheme of the request is used.


                                              Scheme redirects can affect the port of the redirect, for more information,
                                              refer to the documentation for the port field of this filter.


                                              Note that values may be added to this enum, implementations
                                              must ensure that unknown values will not cause a crash.


                                              Unknown values here must result in the implementation setting the
                                              Accepted Condition for the Route to `status: False`, with a
                                              Reason of `UnsupportedValue`.


                                              Support: Extended
                                            enum:
                                            - http
                                            - https
                                            type: string
                                          statusCode:
                                            default: 302
                                            description: |-
                                              StatusCode is the HTTP status code to be used in response.


                                              Note that values may be added to this enum, implementations
                                              must ensure that unknown values will not cause a crash.


                                              Unknown values here must result in the implementation setting the
                                              Accepted Condition for the Route to `status: False`, with a
                                              Reason of `UnsupportedValue`.


                                              Support: Core
                                            enum:
                                            - 301
                                            - 302
                                            type: integer
                                        type: object
                                      responseHeaderModifier:
                                        description: |-
                                          ResponseHeaderModifier defines a schema for a filter that modifies response
                                          headers.


                                          Support: Extended
                                        properties:
                                          add:
                                            description: |-
                                              Add adds the given header(s) (name, value) to the request
                                              before the action. It appends to any existing values associated
                                              with the header name.


                                              Input:
                                                GET /foo HTTP/1.1
                                                my-header: foo


                                              Config:
                                                add:
                                                - name: "my-header"
                                                  value: "bar,baz"


                                              Output:
                                                GET /foo HTTP/1.1
                                                my-header: foo,bar,baz
                                            items:
                                              description: HTTPHeader represents an
                                                HTTP Header name and value as defined
                                                by RFC 7230.
                                              properties:
                                                name:
                                                  description: |-
                                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                    case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                                    If multiple entries specify equivalent header names, the first entry with
                                                    an equivalent name MUST be considered for a match. Subsequent entries
                                                    with an equivalent header name MUST be ignored. Due to the
                                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                                    equivalent.
                                                  maxLength: 256
                                                  minLength: 1
                                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                                  type: string
                                                value:
                                                  description: Value is the value
                                                    of HTTP Header to be matched.
                                                  maxLength: 4096
                                                  minLength: 1
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            maxItems: 16
                                            type: array
                                            x-kubernetes-list-map-keys:
                                            - name
                                            x-kubernetes-list-type: map
                                          remove:
                                            description: |-
                                              Remove the given header(s) from the HTTP request before the action. The
                                              value of Remove is a list of HTTP header names. Note that the header
                                              names are case-insensitive (see
                                              https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                              Input:
                                                GET /foo HTTP/1.1
                                                my-header1: foo
                                                my-header2: bar
                                                my-header3: baz


                                              Config:
                                                remove: ["my-header1", "my-header3"]


                                              Output:
                                                GET /foo HTTP/1.1
                                                my-header2: bar
                                            items:
                                              type: string
                                            maxItems: 16
                                            type: array
                                            x-kubernetes-list-type: set
                                          set:
                                            description: |-
                                              Set overwrites the request with the given header (name, value)
                                              before the action.


                                              Input:
                                                GET /foo HTTP/1.1
                                                my-header: foo


                                              Config:
                                                set:
                                                - name: "my-header"
                                                  value: "bar"


                                              Output:
                                                GET /foo HTTP/1.1
                                                my-header: bar
                                            items:
                                              description: HTTPHeader represents an
                                                HTTP Header name and value as defined
                                                by RFC 7230.
                                              properties:
                                                name:
                                                  description: |-
                                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                    case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                                    If multiple entries specify equivalent header names, the first entry with
                                                    an equivalent name MUST be considered for a match. Subsequent entries
                                                    with an equivalent header name MUST be ignored. Due to the
                                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                                    equivalent.
                                                  maxLength: 256
                                                  minLength: 1
                                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                                  type: string
                                                value:
                                                  description: Value is the value
                                                    of HTTP Header to be matched.
                                                  maxLength: 4096
                                                  minLength: 1
                                                  type: string
                                              required:
                                              - name
                                              - value
                                              type: object
                                            maxItems: 16
                                            type: array
                                            x-kubernetes-list-map-keys:
                                            - name
                                            x-kubernetes-list-type: map
                                        type: object
                                      type:
                                        description: |-
                                          Type identifies the type of filter to apply. As with other API fields,
                                          types are classified into three conformance levels:


                                          - Core: Filter types and their corresponding configuration defined by
                                            "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                            implementations must support core filters.


                                          - Extended: Filter types and their corresponding configuration defined by
                                            "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                            are encouraged to support extended filters.


                                          - Implementation-specific: Filters that are defined and supported by
                                            specific vendors.
                                            In the future, filters showing convergence in behavior across multiple
                                            implementations will be considered for inclusion in extended or core
                                            conformance levels. Filter-specific configuration for such filters
                                            is specified using the ExtensionRef field. `Type` should be set to
                                            "ExtensionRef" for custom filters.


                                          Implementers are encouraged to define custom implementation types to
                                          extend the core API with implementation-specific behavior.


                                          If a reference to a custom filter type cannot be resolved, the filter
                                          MUST NOT be skipped. Instead, requests that would have been processed by
                                          that filter MUST receive a HTTP error response.


                                          Note that values may be added to this enum, implementations
                                          must ensure that unknown values will not cause a crash.


                                          Unknown values here must result in the implementation setting the
                                          Accepted Condition for the Route to `status: False`, with a
                                          Reason of `UnsupportedValue`.


                                          <gateway:experimental:validation:Enum=RequestHeaderModifier;ResponseHeaderModifier;RequestMirror;RequestRedirect;URLRewrite;ExtensionRef;CORS>
                                        enum:
                                        - RequestHeaderModifier
                                        - ResponseHeaderModifier
                                        - RequestMirror
                                        - RequestRedirect
                                        - URLRewrite
                                        - ExtensionRef
                                        type: string
                                      urlRewrite:
                                        description: |-
                                          URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                          Support: Extended
                                        properties:
                                          hostname:
                                            description: |-
                                              Hostname is the value to be used to replace the Host header value during
                                              forwarding.


                                              Support: Extended
                                            maxLength: 253
                                            minLength: 1
                                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                            type: string
                                          path:
                                            description: |-
                                              Path defines a path rewrite.


                                              Support: Extended
                                            properties:
                                              replaceFullPath:
                                                description: |-
                                                  ReplaceFullPath specifies the value with which to replace the full path
                                                  of a request during a rewrite or redirect.
                                                maxLength: 1024
                                                type: string
                                              replacePrefixMatch:
                                                description: |-
                                                  ReplacePrefixMatch specifies the value with which to replace the prefix
                                                  match of a request during a rewrite or redirect. For example, a request
                                                  to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                                  of "/xyz" would be modified to "/xyz/bar".


                                                  Note that this matches the behavior of the PathPrefix match type. This
                                                  matches full path elements. A path element refers to the list of labels
                                                  in the path split by the `/` separator. When specified, a trailing `/` is
                                                  ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                                  match the prefix `/abc`, but the path `/abcd` would not.


                                                  ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                                  Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                                  the implementation setting the Accepted Condition for the Route to `status: False`.


                                                  Request Path | Prefix Match | Replace Prefix | Modified Path
                                                  -------------|--------------|----------------|----------
                                                  /foo/bar     | /foo         | /xyz           | /xyz/bar
                                                  /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                                  /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                                  /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                                  /foo         | /foo         | /xyz           | /xyz
                                                  /foo/        | /foo         | /xyz           | /xyz/
                                                  /foo/bar     | /foo         | <empty string> | /bar
                                                  /foo/        | /foo         | <empty string> | /
                                                  /foo         | /foo         | <empty string> | /
                                                  /foo/        | /foo         | /              | /
                                                  /foo         | /foo         | /              | /
                                                maxLength: 1024
                                                type: string
                                              type:
                                                description: |-
                                                  Type defines the type of path modifier. Additional types may be
                                                  added in a future release of the API.


                                                  Note that values may be added to this enum, implementations
                                                  must ensure that unknown values will not cause a crash.


                                                  Unknown values here must result in the implementation setting the
                                                  Accepted Condition for the Route to `status: False`, with a
                                                  Reason of `UnsupportedValue`.
                                                enum:
                                                - ReplaceFullPath
                                                - ReplacePrefixMatch
                                                type: string
                                            required:
                                            - type
                                            type: object
                                            x-kubernetes-validations:
                                            - message: replaceFullPath must be specified
                                                when type is set to 'ReplaceFullPath'
                                              rule: 'self.type == ''ReplaceFullPath''
                                                ? has(self.replaceFullPath) : true'
                                            - message: type must be 'ReplaceFullPath'
                                                when replaceFullPath is set
                                              rule: 'has(self.replaceFullPath) ? self.type
                                                == ''ReplaceFullPath'' : true'
                                            - message: replacePrefixMatch must be
                                                specified when type is set to 'ReplacePrefixMatch'
                                              rule: 'self.type == ''ReplacePrefixMatch''
                                                ? has(self.replacePrefixMatch) : true'
                                            - message: type must be 'ReplacePrefixMatch'
                                                when replacePrefixMatch is set
                                              rule: 'has(self.replacePrefixMatch)
                                                ? self.type == ''ReplacePrefixMatch''
                                                : true'
                                        type: object
                                    required:
                                    - type
                                    type: object
                                    x-kubernetes-validations:
                                    - message: filter.requestHeaderModifier must be
                                        nil if the filter.type is not RequestHeaderModifier
                                      rule: '!(has(self.requestHeaderModifier) &&
                                        self.type != ''RequestHeaderModifier'')'
                                    - message: filter.requestHeaderModifier must be
                                        specified for RequestHeaderModifier filter.type
                                      rule: '!(!has(self.requestHeaderModifier) &&
                                        self.type == ''RequestHeaderModifier'')'
                                    - message: filter.responseHeaderModifier must
                                        be nil if the filter.type is not ResponseHeaderModifier
                                      rule: '!(has(self.responseHeaderModifier) &&
                                        self.type != ''ResponseHeaderModifier'')'
                                    - message: filter.responseHeaderModifier must
                                        be specified for ResponseHeaderModifier filter.type
                                      rule: '!(!has(self.responseHeaderModifier) &&
                                        self.type == ''ResponseHeaderModifier'')'
                                    - message: filter.requestMirror must be nil if
                                        the filter.type is not RequestMirror
                                      rule: '!(has(self.requestMirror) && self.type
                                        != ''RequestMirror'')'
                                    - message: filter.requestMirror must be specified
                                        for RequestMirror filter.type
                                      rule: '!(!has(self.requestMirror) && self.type
                                        == ''RequestMirror'')'
                                    - message: filter.requestRedirect must be nil
                                        if the filter.type is not RequestRedirect
                                      rule: '!(has(self.requestRedirect) && self.type
                                        != ''RequestRedirect'')'
                                    - message: filter.requestRedirect must be specified
                                        for RequestRedirect filter.type
                                      rule: '!(!has(self.requestRedirect) && self.type
                                        == ''RequestRedirect'')'
                                    - message: filter.urlRewrite must be nil if the
                                        filter.type is not URLRewrite
                                      rule: '!(has(self.urlRewrite) && self.type !=
                                        ''URLRewrite'')'
                                    - message: filter.urlRewrite must be specified
                                        for URLRewrite filter.type
                                      rule: '!(!has(self.urlRewrite) && self.type
                                        == ''URLRewrite'')'
                                    - message: filter.extensionRef must be nil if
                                        the filter.type is not ExtensionRef
                                      rule: '!(has(self.extensionRef) && self.type
                                        != ''ExtensionRef'')'
                                    - message: filter.extensionRef must be specified
                                        for ExtensionRef filter.type
                                      rule: '!(!has(self.extensionRef) && self.type
                                        == ''ExtensionRef'')'
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-validations:
                                  - message: May specify either httpRouteFilterRequestRedirect
                                      or httpRouteFilterRequestRewrite, but not both
                                    rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                      && self.exists(f, f.type == ''URLRewrite''))'
                                  - message: RequestHeaderModifier filter cannot be
                                      repeated
                                    rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                      <= 1
                                  - message: ResponseHeaderModifier filter cannot
                                      be repeated
                                    rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                      <= 1
                                  - message: RequestRedirect filter cannot be repeated
                                    rule: self.filter(f, f.type == 'RequestRedirect').size()
                                      <= 1
                                  - message: URLRewrite filter cannot be repeated
                                    rule: self.filter(f, f.type == 'URLRewrite').size()
                                      <= 1
                                matches:
                                  default:
                                  - path:
                                      type: PathPrefix
                                      value: /
                                  description: |-
                                    Matches define conditions used for matching the rule against incoming
                                    HTTP requests. Each match is independent, i.e. this rule will be matched
                                    if **any** one of the matches is satisfied.


                                    For example, take the following matches configuration:


                                    ```
                                    matches:
                                    - path:
                                        value: "/foo"
                                      headers:
                                      - name: "version"
                                        value: "v2"
                                    - path:
                                        value: "/v2/foo"
                                    ```


                                    For a request to match against this rule, a request must satisfy
                                    EITHER of the two conditions:


                                    - path prefixed with `/foo` AND contains the header `version: v2`
                                    - path prefix of `/v2/foo`


                                    See the documentation for HTTPRouteMatch on how to specify multiple
                                    match conditions that should be ANDed together.


                                    If no matches are specified, the default is a prefix
                                    path match on "/", which has the effect of matching every
                                    HTTP request.


                                    Proxy or Load Balancer routing configuration generated from HTTPRoutes
                                    MUST prioritize matches based on the following criteria, continuing on
                                    ties. Across all rules specified on applicable Routes, precedence must be
                                    given to the match having:


                                    * "Exact" path match.
                                    * "Prefix" path match with largest number of characters.
                                    * Method match.
                                    * Largest number of header matches.
                                    * Largest number of query param matches.


                                    Note: The precedence of RegularExpression path matches are implementation-specific.


                                    If ties still exist across multiple Routes, matching precedence MUST be
                                    determined in order of the following criteria, continuing on ties:


                                    * The oldest Route based on creation timestamp.
                                    * The Route appearing first in alphabetical order by
                                      "{namespace}/{name}".


                                    If ties still exist within an HTTPRoute, matching precedence MUST be granted
                                    to the FIRST matching rule (in list order) with a match meeting the above
                                    criteria.


                                    When no rules matching a request have been successfully attached to the
                                    parent a request is coming from, a HTTP 404 status code MUST be returned.
                                  items:
                                    properties:
                                      headers:
                                        description: |-
                                          Headers specifies HTTP request header matchers. Multiple match values are
                                          ANDed together, meaning, a request must match all the specified headers
                                          to select the route.
                                        items:
                                          description: |-
                                            HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                            headers.
                                          properties:
                                            name:
                                              description: |-
                                                Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                                If multiple entries specify equivalent header names, only the first
                                                entry with an equivalent name MUST be considered for a match. Subsequent
                                                entries with an equivalent header name MUST be ignored. Due to the
                                                case-insensitivity of header names, "foo" and "Foo" are considered
                                                equivalent.


                                                When a header is repeated in an HTTP request, it is
                                                implementation-specific behavior as to how this is represented.
                                                Generally, proxies should follow the guidance from the RFC:
                                                https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                                processing a repeated header, with special handling for "Set-Cookie".
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            type:
                                              default: Exact
                                              description: |-
                                                Type specifies how to match against the value of the header.


                                                Support: Core (Exact)


                                                Support: Implementation-specific (RegularExpression)


                                                Since RegularExpression HeaderMatchType has implementation-specific
                                                conformance, implementations can support POSIX, PCRE or any other dialects
                                                of regular expressions. Please read the implementation's documentation to
                                                determine the supported dialect.
                                              enum:
                                              - Exact
                                              - RegularExpression
                                              type: string
                                            value:
                                              description: Value is the value of HTTP
                                                Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                      queryParams:
                                        description: |-
                                          QueryParams specifies HTTP query parameter matchers. Multiple match
                                          values are ANDed together, meaning, a request must match all the
                                          specified query parameters to select the route.


                                          Support: Extended
                                        items:
                                          description: |-
                                            HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                            query parameters.
                                          properties:
                                            name:
                                              description: |-
                                                Name is the name of the HTTP query param to be matched. This must be an
                                                exact string match. (See
                                                https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                                If multiple entries specify equivalent query param names, only the first
                                                entry with an equivalent name MUST be considered for a match. Subsequent
                                                entries with an equivalent query param name MUST be ignored.


                                                If a query param is repeated in an HTTP request, the behavior is
                                                purposely left undefined, since different data planes have different
                                                capabilities. However, it is *recommended* that implementations should
                                                match against the first value of the param if the data plane supports it,
                                                as this behavior is expected in other load balancing contexts outside of
                                                the Gateway API.


                                                Users SHOULD NOT route traffic based on repeated query params to guard
                                                themselves against potential differences in the implementations.
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            type:
                                              default: Exact
                                              description: |-
                                                Type specifies how to match against the value of the query parameter.


                                                Support: Extended (Exact)


                                                Support: Implementation-specific (RegularExpression)


                                                Since RegularExpression QueryParamMatchType has Implementation-specific
                                                conformance, implementations can support POSIX, PCRE or any other
                                                dialects of regular expressions. Please read the implementation's
                                                documentation to determine the supported dialect.
                                              enum:
                                              - Exact
                                              - RegularExpression
                                              type: string
                                            value:
                                              description: Value is the value of HTTP
                                                query param to be matched.
                                              maxLength: 1024
                                              minLength: 1
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                    type: object
                                  maxItems: 8
                                  type: array
                              type: object
                            filters:
                              description: |-
                                Filters define the filters that are applied to requests that match
                                this rule.


                                The effects of ordering of multiple behaviors are currently unspecified.
                                This can change in the future based on feedback during the alpha stage.


                                Conformance-levels at this level are defined based on the type of filter:


                                - ALL core filters MUST be supported by all implementations.
                                - Implementers are encouraged to support extended filters.
                                - Implementation-specific custom filters have no API guarantees across
                                  implementations.


                                Specifying the same filter multiple times is not supported unless explicitly
                                indicated in the filter.


                                All filters are expected to be compatible with each other except for the
                                URLRewrite and RequestRedirect filters, which may not be combined. If an
                                implementation can not support other combinations of filters, they must clearly
                                document that limitation. In cases where incompatible or unsupported
                                filters are specified and cause the `Accepted` condition to be set to status
                                `False`, implementations may use the `IncompatibleFilters` reason to specify
                                this configuration error.


                                Support: Core
                              items:
                                description: |-
                                  HTTPRouteFilter defines processing steps that must be completed during the
                                  request or response lifecycle. HTTPRouteFilters are meant as an extension
                                  point to express processing that may be done in Gateway implementations. Some
                                  examples include request or response modification, implementing
                                  authentication strategies, rate-limiting, and traffic shaping. API
                                  guarantee/conformance is defined based on the type of the filter.


                                  <gateway:experimental:validation:XValidation:message="filter.cors must be nil if the filter.type is not CORS",rule="!(has(self.cors) && self.type != 'CORS')">
                                  <gateway:experimental:validation:XValidation:message="filter.cors must be specified for CORS filter.type",rule="!(!has(self.cors) && self.type == 'CORS')">
                                properties:
                                  cors:
                                    description: |-
                                      CORS defines a schema for a filter that responds to the
                                      cross-origin request based on HTTP response header.


                                      Support: Extended


                                      <gateway:experimental>
                                    properties:
                                      allowCredentials:
                                        description: |-
                                          AllowCredentials indicates whether the actual cross-origin request allows
                                          to include credentials.


                                          The only valid value for the `Access-Control-Allow-Credentials` response
                                          header is true (case-sensitive).


                                          If the credentials are not allowed in cross-origin requests, the gateway
                                          will omit the header `Access-Control-Allow-Credentials` entirely rather
                                          than setting its value to false.


                                          Support: Extended
                                        enum:
                                        - true
                                        type: boolean
                                      allowHeaders:
                                        description: |-
                                          AllowHeaders indicates which HTTP request headers are supported for
                                          accessing the requested resource.


                                          Header names are not case sensitive.


                                          Multiple header names in the value of the `Access-Control-Allow-Headers`
                                          response header are separated by a comma (",").


                                          When the `AllowHeaders` field is configured with one or more headers, the
                                          gateway must return the `Access-Control-Allow-Headers` response header
                                          which value is present in the `AllowHeaders` field.


                                          If any header name in the `Access-Control-Request-Headers` request header
                                          is not included in the list of header names specified by the response
                                          header `Access-Control-Allow-Headers`, it will present an error on the
                                          client side.


                                          If any header name in the `Access-Control-Allow-Headers` response header
                                          does not recognize by the client, it will also occur an error on the
                                          client side.


                                          A wildcard indicates that the requests with all HTTP headers are allowed.
                                          The `Access-Control-Allow-Headers` response header can only use `*`
                                          wildcard as value when the `AllowCredentials` field is unspecified.


                                          When the `AllowCredentials` field is specified and `AllowHeaders` field
                                          specified with the `*` wildcard, the gateway must specify one or more
                                          HTTP headers in the value of the `Access-Control-Allow-Headers` response
                                          header. The value of the header `Access-Control-Allow-Headers` is same as
                                          the `Access-Control-Request-Headers` header provided by the client. If
                                          the header `Access-Control-Request-Headers` is not included in the
                                          request, the gateway will omit the `Access-Control-Allow-Headers`
                                          response header, instead of specifying the `*` wildcard. A Gateway
                                          implementation may choose to add implementation-specific default headers.


                                          Support: Extended
                                        items:
                                          description: |-
                                            HTTPHeaderName is the name of an HTTP header.


                                            Valid values include:


                                            * "Authorization"
                                            * "Set-Cookie"


                                            Invalid values include:


                                              - ":method" - ":" is an invalid character. This means that HTTP/2 pseudo
                                                headers are not currently supported by this type.
                                              - "/invalid" - "/ " is an invalid character
                                          maxLength: 256
                                          minLength: 1
                                          pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                          type: string
                                        maxItems: 64
                                        type: array
                                        x-kubernetes-list-type: set
                                      allowMethods:
                                        description: |-
                                          AllowMethods indicates which HTTP methods are supported for accessing the
                                          requested resource.


                                          Valid values are any method defined by RFC9110, along with the special
                                          value `*`, which represents all HTTP methods are allowed.


                                          Method names are case sensitive, so these values are also case-sensitive.
                                          (See https://www.rfc-editor.org/rfc/rfc2616#section-5.1.1)


                                          Multiple method names in the value of the `Access-Control-Allow-Methods`
                                          response header are separated by a comma (",").


                                          A CORS-safelisted method is a method that is `GET`, `HEAD`, or `POST`.
                                          (See https://fetch.spec.whatwg.org/#cors-safelisted-method) The
                                          CORS-safelisted methods are always allowed, regardless of whether they
                                          are specified in the `AllowMethods` field.


                                          When the `AllowMethods` field is configured with one or more methods, the
                                          gateway must return the `Access-Control-Allow-Methods` response header
                                          which value is present in the `AllowMethods` field.


                                          If the HTTP method of the `Access-Control-Request-Method` request header
                                          is not included in the list of methods specified by the response header
                                          `Access-Control-Allow-Methods`, it will present an error on the client
                                          side.


                                          The `Access-Control-Allow-Methods` response header can only use `*`
                                          wildcard as value when the `AllowCredentials` field is unspecified.


                                          When the `AllowCredentials` field is specified and `AllowMethods` field
                                          specified with the `*` wildcard, the gateway must specify one HTTP method
                                          in the value of the Access-Control-Allow-Methods response header. The
                                          value of the header `Access-Control-Allow-Methods` is same as the
                                          `Access-Control-Request-Method` header provided by the client. If the
                                          header `Access-Control-Request-Method` is not included in the request,
                                          the gateway will omit the `Access-Control-Allow-Methods` response header,
                                          instead of specifying the `*` wildcard. A Gateway implementation may
                                          choose to add implementation-specific default methods.


                                          Support: Extended
                                        items:
                                          enum:
                                          - GET
                                          - HEAD
                                          - POST
                                          - PUT
                                          - DELETE
                                          - CONNECT
                                          - OPTIONS
                                          - TRACE
                                          - PATCH
                                          - '*'
                                          type: string
                                        maxItems: 9
                                        type: array
                                        x-kubernetes-list-type: set
                                        x-kubernetes-validations:
                                        - message: AllowMethods cannot contain '*'
                                            alongside other methods
                                          rule: '!(''*'' in self && self.size() >
                                            1)'
                                      allowOrigins:
                                        description: |-
                                          AllowOrigins indicates whether the response can be shared with requested
                                          resource from the given `Origin`.


                                          The `Origin` consists of a scheme and a host, with an optional port, and
                                          takes the form `<scheme>://<host>(:<port>)`.


                                          Valid values for scheme are: `http` and `https`.


                                          Valid values for port are any integer between 1 and 65535 (the list of
                                          available TCP/UDP ports). Note that, if not included, port `80` is
                                          assumed for `http` scheme origins, and port `443` is assumed for `https`
                                          origins. This may affect origin matching.


                                          The host part of the origin may contain the wildcard character `*`. These
                                          wildcard characters behave as follows:


                                          * `*` is a greedy match to the _left_, including any number of
                                            DNS labels to the left of its position. This also means that
                                            `*` will include any number of period `.` characters to the
                                            left of its position.
                                          * A wildcard by itself matches all hosts.


                                          An origin value that includes _only_ the `*` character indicates requests
                                          from all `Origin`s are allowed.


                                          When the `AllowOrigins` field is configured with multiple origins, it
                                          means the server supports clients from multiple origins. If the request
                                          `Origin` matches the configured allowed origins, the gateway must return
                                          the given `Origin` and sets value of the header
                                          `Access-Control-Allow-Origin` same as the `Origin` header provided by the
                                          client.


                                          The status code of a successful response to a "preflight" request is
                                          always an OK status (i.e., 204 or 200).


                                          If the request `Origin` does not match the configured allowed origins,
                                          the gateway returns 204/200 response but doesn't set the relevant
                                          cross-origin response headers. Alternatively, the gateway responds with
                                          403 status to the "preflight" request is denied, coupled with omitting
                                          the CORS headers. The cross-origin request fails on the client side.
                                          Therefore, the client doesn't attempt the actual cross-origin request.


                                          The `Access-Control-Allow-Origin` response header can only use `*`
                                          wildcard as value when the `AllowCredentials` field is unspecified.


                                          When the `AllowCredentials` field is specified and `AllowOrigins` field
                                          specified with the `*` wildcard, the gateway must return a single origin
                                          in the value of the `Access-Control-Allow-Origin` response header,
                                          instead of specifying the `*` wildcard. The value of the header
                                          `Access-Control-Allow-Origin` is same as the `Origin` header provided by
                                          the client.


                                          Support: Extended
                                        items:
                                          description: |-
                                            The AbsoluteURI MUST NOT be a relative URI, and it MUST follow the URI syntax and
                                            encoding rules specified in RFC3986.  The AbsoluteURI MUST include both a
                                            scheme (e.g., "http" or "spiffe") and a scheme-specific-part.  URIs that
                                            include an authority MUST include a fully qualified domain name or
                                            IP address as the host.
                                            <gateway:util:excludeFromCRD> The below regex is taken from the regex section in RFC 3986 with a slight modification to enforce a full URI and not relative. </gateway:util:excludeFromCRD>
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^(([^:/?#]+):)(//([^/?#]*))([^?#]*)(\?([^#]*))?(#(.*))?
                                          type: string
                                        maxItems: 64
                                        type: array
                                        x-kubernetes-list-type: set
                                      exposeHeaders:
                                        description: |-
                                          ExposeHeaders indicates which HTTP response headers can be exposed
                                          to client-side scripts in response to a cross-origin request.


                                          A CORS-safelisted response header is an HTTP header in a CORS response
                                          that it is considered safe to expose to the client scripts.
                                          The CORS-safelisted response headers include the following headers:
                                          `Cache-Control`
                                          `Content-Language`
                                          `Content-Length`
                                          `Content-Type`
                                          `Expires`
                                          `Last-Modified`
                                          `Pragma`
                                          (See https://fetch.spec.whatwg.org/#cors-safelisted-response-header-name)
                                          The CORS-safelisted response headers are exposed to client by default.


                                          When an HTTP header name is specified using the `ExposeHeaders` field,
                                          this additional header will be exposed as part of the response to the
                                          client.


                                          Header names are not case sensitive.


                                          Multiple header names in the value of the `Access-Control-Expose-Headers`
                                          response header are separated by a comma (",").


                                          A wildcard indicates that the responses with all HTTP headers are exposed
                                          to clients. The `Access-Control-Expose-Headers` response header can only
                                          use `*` wildcard as value when the `AllowCredentials` field is
                                          unspecified.


                                          Support: Extended
                                        items:
                                          description: |-
                                            HTTPHeaderName is the name of an HTTP header.


                                            Valid values include:


                                            * "Authorization"
                                            * "Set-Cookie"


                                            Invalid values include:


                                              - ":method" - ":" is an invalid character. This means that HTTP/2 pseudo
                                                headers are not currently supported by this type.
                                              - "/invalid" - "/ " is an invalid character
                                          maxLength: 256
                                          minLength: 1
                                          pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                          type: string
                                        maxItems: 64
                                        type: array
                                        x-kubernetes-list-type: set
                                      maxAge:
                                        default: 5
                                        description: |-
                                          MaxAge indicates the duration (in seconds) for the client to cache the
                                          results of a "preflight" request.


                                          The information provided by the `Access-Control-Allow-Methods` and
                                          `Access-Control-Allow-Headers` response headers can be cached by the
                                          client until the time specified by `Access-Control-Max-Age` elapses.


                                          The default value of `Access-Control-Max-Age` response header is 5
                                          (seconds).
                                        format: int32
                                        minimum: 1
                                        type: integer
                                    type: object
                                  extensionRef:
                                    description: |-
                                      ExtensionRef is an optional, implementation-specific extension to the
                                      "filter" behavior.  For example, resource "myroutefilter" in group
                                      "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                      extended filters.


                                      This filter can be used multiple times within the same rule.


                                      Support: Implementation-specific
                                    properties:
                                      group:
                                        description: |-
                                          Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                          When unspecified or empty string, core API group is inferred.
                                        maxLength: 253
                                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      kind:
                                        description: Kind is kind of the referent.
                                          For example "HTTPRoute" or "Service".
                                        maxLength: 63
                                        minLength: 1
                                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                        type: string
                                      name:
                                        description: Name is the name of the referent.
                                        maxLength: 253
                                        minLength: 1
                                        type: string
                                    required:
                                    - group
                                    - kind
                                    - name
                                    type: object
                                  requestHeaderModifier:
                                    description: |-
                                      RequestHeaderModifier defines a schema for a filter that modifies request
                                      headers.


                                      Support: Core
                                    properties:
                                      add:
                                        description: |-
                                          Add adds the given header(s) (name, value) to the request
                                          before the action. It appends to any existing values associated
                                          with the header name.


                                          Input:
                                            GET /foo HTTP/1.1
                                            my-header: foo


                                          Config:
                                            add:
                                            - name: "my-header"
                                              value: "bar,baz"


                                          Output:
                                            GET /foo HTTP/1.1
                                            my-header: foo,bar,baz
                                        items:
                                          description: HTTPHeader represents an HTTP
                                            Header name and value as defined by RFC
                                            7230.
                                          properties:
                                            name:
                                              description: |-
                                                Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                                If multiple entries specify equivalent header names, the first entry with
                                                an equivalent name MUST be considered for a match. Subsequent entries
                                                with an equivalent header name MUST be ignored. Due to the
                                                case-insensitivity of header names, "foo" and "Foo" are considered
                                                equivalent.
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP
                                                Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                      remove:
                                        description: |-
                                          Remove the given header(s) from the HTTP request before the action. The
                                          value of Remove is a list of HTTP header names. Note that the header
                                          names are case-insensitive (see
                                          https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                          Input:
                                            GET /foo HTTP/1.1
                                            my-header1: foo
                                            my-header2: bar
                                            my-header3: baz


                                          Config:
                                            remove: ["my-header1", "my-header3"]


                                          Output:
                                            GET /foo HTTP/1.1
                                            my-header2: bar
                                        items:
                                          type: string
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-type: set
                                      set:
                                        description: |-
                                          Set overwrites the request with the given header (name, value)
                                          before the action.


                                          Input:
                                            GET /foo HTTP/1.1
                                            my-header: foo


                                          Config:
                                            set:
                                            - name: "my-header"
                                              value: "bar"


                                          Output:
                                            GET /foo HTTP/1.1
                                            my-header: bar
                                        items:
                                          description: HTTPHeader represents an HTTP
                                            Header name and value as defined by RFC
                                            7230.
                                          properties:
                                            name:
                                              description: |-
                                                Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                                If multiple entries specify equivalent header names, the first entry with
                                                an equivalent name MUST be considered for a match. Subsequent entries
                                                with an equivalent header name MUST be ignored. Due to the
                                                case-insensitivity of header names, "foo" and "Foo" are considered
                                                equivalent.
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP
                                                Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                    type: object
                                  requestMirror:
                                    description: |-
                                      RequestMirror defines a schema for a filter that mirrors requests.
                                      Requests are sent to the specified destination, but responses from
                                      that destination are ignored.


                                      This filter can be used multiple times within the same rule. Note that
                                      not all implementations will be able to support mirroring to multiple
                                      backends.


                                      Support: Extended
                                    properties:
                                      backendRef:
                                        description: |-
                                          BackendRef references a resource where mirrored requests are sent.


                                          Mirrored requests must be sent only to a single destination endpoint
                                          within this BackendRef, irrespective of how many endpoints are present
                                          within this BackendRef.


                                          If the referent cannot be found, this BackendRef is invalid and must be
                                          dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                          condition on the Route status is set to `status: False` and not configure
                                          this backend in the underlying implementation.


                                          If there is a cross-namespace reference to an *existing* object
                                          that is not allowed by a ReferenceGrant, the controller must ensure the
                                          "ResolvedRefs"  condition on the Route is set to `status: False`,
                                          with the "RefNotPermitted" reason and not configure this backend in the
                                          underlying implementation.


                                          In either error case, the Message of the `ResolvedRefs` Condition
                                          should be used to provide more detail about the problem.


                                          Support: Extended for Kubernetes Service


                                          Support: Implementation-specific for any other resource
                                        properties:
                                          group:
                                            default: ""
                                            description: |-
                                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                              When unspecified or empty string, core API group is inferred.
                                            maxLength: 253
                                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                            type: string
                                          kind:
                                            default: Service
                                            description: |-
                                              Kind is the Kubernetes resource kind of the referent. For example
                                              "Service".


                                              Defaults to "Service" when not specified.


                                              ExternalName services can refer to CNAME DNS records that may live
                                              outside of the cluster and as such are difficult to reason about in
                                              terms of conformance. They also may not be safe to forward to (see
                                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                                              support ExternalName Services.


                                              Support: Core (Services with a type other than ExternalName)


                                              Support: Implementation-specific (Services with type ExternalName)
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                            type: string
                                          name:
                                            description: Name is the name of the referent.
                                            maxLength: 253
                                            minLength: 1
                                            type: string
                                          namespace:
                                            description: |-
                                              Namespace is the namespace of the backend. When unspecified, the local
                                              namespace is inferred.


                                              Note that when a namespace different than the local namespace is specified,
                                              a ReferenceGrant object is required in the referent namespace to allow that
                                              namespace's owner to accept the reference. See the ReferenceGrant
                                              documentation for details.


                                              Support: Core
                                            maxLength: 63
                                            minLength: 1
                                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                            type: string
                                          port:
                                            description: |-
                                              Port specifies the destination port number to use for this resource.
                                              Port is required when the referent is a Kubernetes Service. In this
                                              case, the port number is the service port number, not the target port.
                                              For other resources, destination port might be derived from the referent
                                              resource or this field.
                                            format: int32
                                            maximum: 65535
                                            minimum: 1
                                            type: integer
                                        required:
                                        - name
                                        type: object
                                        x-kubernetes-validations:
                                        - message: Must have port for Service reference
                                          rule: '(size(self.group) == 0 && self.kind
                                            == ''Service'') ? has(self.port) : true'
                                      fraction:
                                        description: |-
                                          Fraction represents the fraction of requests that should be
                                          mirrored to BackendRef.


                                          Only one of Fraction or Percent may be specified. If neither field
                                          is specified, 100% of requests will be mirrored.
                                        properties:
                                          denominator:
                                            default: 100
                                            format: int32
                                            minimum: 1
                                            type: integer
                                          numerator:
                                            format: int32
                                            minimum: 0
                                            type: integer
                                        required:
                                        - numerator
                                        type: object
                                        x-kubernetes-validations:
                                        - message: numerator must be less than or
                                            equal to denominator
                                          rule: self.numerator <= self.denominator
                                      percent:
                                        description: |-
                                          Percent represents the percentage of requests that should be
                                          mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                          requests) and its maximum value is 100 (indicating 100% of requests).


                                          Only one of Fraction or Percent may be specified. If neither field
                                          is specified, 100% of requests will be mirrored.
                                        format: int32
                                        maximum: 100
                                        minimum: 0
                                        type: integer
                                    required:
                                    - backendRef
                                    type: object
                                    x-kubernetes-validations:
                                    - message: Only one of percent or fraction may
                                        be specified in HTTPRequestMirrorFilter
                                      rule: '!(has(self.percent) && has(self.fraction))'
                                  requestRedirect:
                                    description: |-
                                      RequestRedirect defines a schema for a filter that responds to the
                                      request with an HTTP redirection.


                                      Support: Core
                                    properties:
                                      hostname:
                                        description: |-
                                          Hostname is the hostname to be used in the value of the `Location`
                                          header in the response.
                                          When empty, the hostname in the `Host` header of the request is used.


                                          Support: Core
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      path:
                                        description: |-
                                          Path defines parameters used to modify the path of the incoming request.
                                          The modified path is then used to construct the `Location` header. When
                                          empty, the request path is used as-is.


                                          Support: Extended
                                        properties:
                                          replaceFullPath:
                                            description: |-
                                              ReplaceFullPath specifies the value with which to replace the full path
                                              of a request during a rewrite or redirect.
                                            maxLength: 1024
                                            type: string
                                          replacePrefixMatch:
                                            description: |-
                                              ReplacePrefixMatch specifies the value with which to replace the prefix
                                              match of a request during a rewrite or redirect. For example, a request
                                              to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                              of "/xyz" would be modified to "/xyz/bar".


                                              Note that this matches the behavior of the PathPrefix match type. This
                                              matches full path elements. A path element refers to the list of labels
                                              in the path split by the `/` separator. When specified, a trailing `/` is
                                              ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                              match the prefix `/abc`, but the path `/abcd` would not.


                                              ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                              Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                              the implementation setting the Accepted Condition for the Route to `status: False`.


                                              Request Path | Prefix Match | Replace Prefix | Modified Path
                                              -------------|--------------|----------------|----------
                                              /foo/bar     | /foo         | /xyz           | /xyz/bar
                                              /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                              /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                              /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                              /foo         | /foo         | /xyz           | /xyz
                                              /foo/        | /foo         | /xyz           | /xyz/
                                              /foo/bar     | /foo         | <empty string> | /bar
                                              /foo/        | /foo         | <empty string> | /
                                              /foo         | /foo         | <empty string> | /
                                              /foo/        | /foo         | /              | /
                                              /foo         | /foo         | /              | /
                                            maxLength: 1024
                                            type: string
                                          type:
                                            description: |-
                                              Type defines the type of path modifier. Additional types may be
                                              added in a future release of the API.


                                              Note that values may be added to this enum, implementations
                                              must ensure that unknown values will not cause a crash.


                                              Unknown values here must result in the implementation setting the
                                              Accepted Condition for the Route to `status: False`, with a
                                              Reason of `UnsupportedValue`.
                                            enum:
                                            - ReplaceFullPath
                                            - ReplacePrefixMatch
                                            type: string
                                        required:
                                        - type
                                        type: object
                                        x-kubernetes-validations:
                                        - message: replaceFullPath must be specified
                                            when type is set to 'ReplaceFullPath'
                                          rule: 'self.type == ''ReplaceFullPath''
                                            ? has(self.replaceFullPath) : true'
                                        - message: type must be 'ReplaceFullPath'
                                            when replaceFullPath is set
                                          rule: 'has(self.replaceFullPath) ? self.type
                                            == ''ReplaceFullPath'' : true'
                                        - message: replacePrefixMatch must be specified
                                            when type is set to 'ReplacePrefixMatch'
                                          rule: 'self.type == ''ReplacePrefixMatch''
                                            ? has(self.replacePrefixMatch) : true'
                                        - message: type must be 'ReplacePrefixMatch'
                                            when replacePrefixMatch is set
                                          rule: 'has(self.replacePrefixMatch) ? self.type
                                            == ''ReplacePrefixMatch'' : true'
                                      port:
                                        description: |-
                                          Port is the port to be used in the value of the `Location`
                                          header in the response.


                                          If no port is specified, the redirect port MUST be derived using the
                                          following rules:


                                          * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                            port associated with the redirect scheme. Specifically "http" to port 80
                                            and "https" to port 443. If the redirect scheme does not have a
                                            well-known port, the listener port of the Gateway SHOULD be used.
                                          * If redirect scheme is empty, the redirect port MUST be the Gateway
                                            Listener port.


                                          Implementations SHOULD NOT add the port number in the 'Location'
                                          header in the following cases:


                                          * A Location header that will use HTTP (whether that is determined via
                                            the Listener protocol or the Scheme field) _and_ use port 80.
                                          * A Location header that will use HTTPS (whether that is determined via
                                            the Listener protocol or the Scheme field) _and_ use port 443.


                                          Support: Extended
                                        format: int32
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                      scheme:
                                        description: |-
                                          Scheme is the scheme to be used in the value of the `Location` header in
                                          the response. When empty, the scheme of the request is used.


                                          Scheme redirects can affect the port of the redirect, for more information,
                                          refer to the documentation for the port field of this filter.


                                          Note that values may be added to this enum, implementations
                                          must ensure that unknown values will not cause a crash.


                                          Unknown values here must result in the implementation setting the
                                          Accepted Condition for the Route to `status: False`, with a
                                          Reason of `UnsupportedValue`.


                                          Support: Extended
                                        enum:
                                        - http
                                        - https
                                        type: string
                                      statusCode:
                                        default: 302
                                        description: |-
                                          StatusCode is the HTTP status code to be used in response.


                                          Note that values may be added to this enum, implementations
                                          must ensure that unknown values will not cause a crash.


                                          Unknown values here must result in the implementation setting the
                                          Accepted Condition for the Route to `status: False`, with a
                                          Reason of `UnsupportedValue`.


                                          Support: Core
                                        enum:
                                        - 301
                                        - 302
                                        type: integer
                                    type: object
                                  responseHeaderModifier:
                                    description: |-
                                      ResponseHeaderModifier defines a schema for a filter that modifies response
                                      headers.


                                      Support: Extended
                                    properties:
                                      add:
                                        description: |-
                                          Add adds the given header(s) (name, value) to the request
                                          before the action. It appends to any existing values associated
                                          with the header name.


                                          Input:
                                            GET /foo HTTP/1.1
                                            my-header: foo


                                          Config:
                                            add:
                                            - name: "my-header"
                                              value: "bar,baz"


                                          Output:
                                            GET /foo HTTP/1.1
                                            my-header: foo,bar,baz
                                        items:
                                          description: HTTPHeader represents an HTTP
                                            Header name and value as defined by RFC
                                            7230.
                                          properties:
                                            name:
                                              description: |-
                                                Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                                If multiple entries specify equivalent header names, the first entry with
                                                an equivalent name MUST be considered for a match. Subsequent entries
                                                with an equivalent header name MUST be ignored. Due to the
                                                case-insensitivity of header names, "foo" and "Foo" are considered
                                                equivalent.
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP
                                                Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                      remove:
                                        description: |-
                                          Remove the given header(s) from the HTTP request before the action. The
                                          value of Remove is a list of HTTP header names. Note that the header
                                          names are case-insensitive (see
                                          https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                          Input:
                                            GET /foo HTTP/1.1
                                            my-header1: foo
                                            my-header2: bar
                                            my-header3: baz


                                          Config:
                                            remove: ["my-header1", "my-header3"]


                                          Output:
                                            GET /foo HTTP/1.1
                                            my-header2: bar
                                        items:
                                          type: string
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-type: set
                                      set:
                                        description: |-
                                          Set overwrites the request with the given header (name, value)
                                          before the action.


                                          Input:
                                            GET /foo HTTP/1.1
                                            my-header: foo


                                          Config:
                                            set:
                                            - name: "my-header"
                                              value: "bar"


                                          Output:
                                            GET /foo HTTP/1.1
                                            my-header: bar
                                        items:
                                          description: HTTPHeader represents an HTTP
                                            Header name and value as defined by RFC
                                            7230.
                                          properties:
                                            name:
                                              description: |-
                                                Name is the name of the HTTP Header to be matched. Name matching MUST be
                                                case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                                If multiple entries specify equivalent header names, the first entry with
                                                an equivalent name MUST be considered for a match. Subsequent entries
                                                with an equivalent header name MUST be ignored. Due to the
                                                case-insensitivity of header names, "foo" and "Foo" are considered
                                                equivalent.
                                              maxLength: 256
                                              minLength: 1
                                              pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                              type: string
                                            value:
                                              description: Value is the value of HTTP
                                                Header to be matched.
                                              maxLength: 4096
                                              minLength: 1
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        maxItems: 16
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                    type: object
                                  type:
                                    description: |-
                                      Type identifies the type of filter to apply. As with other API fields,
                                      types are classified into three conformance levels:


                                      - Core: Filter types and their corresponding configuration defined by
                                        "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                        implementations must support core filters.


                                      - Extended: Filter types and their corresponding configuration defined by
                                        "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                        are encouraged to support extended filters.


                                      - Implementation-specific: Filters that are defined and supported by
                                        specific vendors.
                                        In the future, filters showing convergence in behavior across multiple
                                        implementations will be considered for inclusion in extended or core
                                        conformance levels. Filter-specific configuration for such filters
                                        is specified using the ExtensionRef field. `Type` should be set to
                                        "ExtensionRef" for custom filters.


                                      Implementers are encouraged to define custom implementation types to
                                      extend the core API with implementation-specific behavior.


                                      If a reference to a custom filter type cannot be resolved, the filter
                                      MUST NOT be skipped. Instead, requests that would have been processed by
                                      that filter MUST receive a HTTP error response.


                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.


                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.


                                      <gateway:experimental:validation:Enum=RequestHeaderModifier;ResponseHeaderModifier;RequestMirror;RequestRedirect;URLRewrite;ExtensionRef;CORS>
                                    enum:
                                    - RequestHeaderModifier
                                    - ResponseHeaderModifier
                                    - RequestMirror
                                    - RequestRedirect
                                    - URLRewrite
                                    - ExtensionRef
                                    type: string
                                  urlRewrite:
                                    description: |-
                                      URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                      Support: Extended
                                    properties:
                                      hostname:
                                        description: |-
                                          Hostname is the value to be used to replace the Host header value during
                                          forwarding.


                                          Support: Extended
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                        type: string
                                      path:
                                        description: |-
                                          Path defines a path rewrite.


                                          Support: Extended
                                        properties:
                                          replaceFullPath:
                                            description: |-
                                              ReplaceFullPath specifies the value with which to replace the full path
                                              of a request during a rewrite or redirect.
                                            maxLength: 1024
                                            type: string
                                          replacePrefixMatch:
                                            description: |-
                                              ReplacePrefixMatch specifies the value with which to replace the prefix
                                              match of a request during a rewrite or redirect. For example, a request
                                              to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                              of "/xyz" would be modified to "/xyz/bar".


                                              Note that this matches the behavior of the PathPrefix match type. This
                                              matches full path elements. A path element refers to the list of labels
                                              in the path split by the `/` separator. When specified, a trailing `/` is
                                              ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                              match the prefix `/abc`, but the path `/abcd` would not.


                                              ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                              Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                              the implementation setting the Accepted Condition for the Route to `status: False`.


                                              Request Path | Prefix Match | Replace Prefix | Modified Path
                                              -------------|--------------|----------------|----------
                                              /foo/bar     | /foo         | /xyz           | /xyz/bar
                                              /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                              /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                              /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                              /foo         | /foo         | /xyz           | /xyz
                                              /foo/        | /foo         | /xyz           | /xyz/
                                              /foo/bar     | /foo         | <empty string> | /bar
                                              /foo/        | /foo         | <empty string> | /
                                              /foo         | /foo         | <empty string> | /
                                              /foo/        | /foo         | /              | /
                                              /foo         | /foo         | /              | /
                                            maxLength: 1024
                                            type: string
                                          type:
                                            description: |-
                                              Type defines the type of path modifier. Additional types may be
                                              added in a future release of the API.


                                              Note that values may be added to this enum, implementations
                                              must ensure that unknown values will not cause a crash.


                                              Unknown values here must result in the implementation setting the
                                              Accepted Condition for the Route to `status: False`, with a
                                              Reason of `UnsupportedValue`.
                                            enum:
                                            - ReplaceFullPath
                                            - ReplacePrefixMatch
                                            type: string
                                        required:
                                        - type
                                        type: object
                                        x-kubernetes-validations:
                                        - message: replaceFullPath must be specified
                                            when type is set to 'ReplaceFullPath'
                                          rule: 'self.type == ''ReplaceFullPath''
                                            ? has(self.replaceFullPath) : true'
                                        - message: type must be 'ReplaceFullPath'
                                            when replaceFullPath is set
                                          rule: 'has(self.replaceFullPath) ? self.type
                                            == ''ReplaceFullPath'' : true'
                                        - message: replacePrefixMatch must be specified
                                            when type is set to 'ReplacePrefixMatch'
                                          rule: 'self.type == ''ReplacePrefixMatch''
                                            ? has(self.replacePrefixMatch) : true'
                                        - message: type must be 'ReplacePrefixMatch'
                                            when replacePrefixMatch is set
                                          rule: 'has(self.replacePrefixMatch) ? self.type
                                            == ''ReplacePrefixMatch'' : true'
                                    type: object
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: filter.requestHeaderModifier must be nil
                                    if the filter.type is not RequestHeaderModifier
                                  rule: '!(has(self.requestHeaderModifier) && self.type
                                    != ''RequestHeaderModifier'')'
                                - message: filter.requestHeaderModifier must be specified
                                    for RequestHeaderModifier filter.type
                                  rule: '!(!has(self.requestHeaderModifier) && self.type
                                    == ''RequestHeaderModifier'')'
                                - message: filter.responseHeaderModifier must be nil
                                    if the filter.type is not ResponseHeaderModifier
                                  rule: '!(has(self.responseHeaderModifier) && self.type
                                    != ''ResponseHeaderModifier'')'
                                - message: filter.responseHeaderModifier must be specified
                                    for ResponseHeaderModifier filter.type
                                  rule: '!(!has(self.responseHeaderModifier) && self.type
                                    == ''ResponseHeaderModifier'')'
                                - message: filter.requestMirror must be nil if the
                                    filter.type is not RequestMirror
                                  rule: '!(has(self.requestMirror) && self.type !=
                                    ''RequestMirror'')'
                                - message: filter.requestMirror must be specified
                                    for RequestMirror filter.type
                                  rule: '!(!has(self.requestMirror) && self.type ==
                                    ''RequestMirror'')'
                                - message: filter.requestRedirect must be nil if the
                                    filter.type is not RequestRedirect
                                  rule: '!(has(self.requestRedirect) && self.type
                                    != ''RequestRedirect'')'
                                - message: filter.requestRedirect must be specified
                                    for RequestRedirect filter.type
                                  rule: '!(!has(self.requestRedirect) && self.type
                                    == ''RequestRedirect'')'
                                - message: filter.urlRewrite must be nil if the filter.type
                                    is not URLRewrite
                                  rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                                - message: filter.urlRewrite must be specified for
                                    URLRewrite filter.type
                                  rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                                - message: filter.extensionRef must be nil if the
                                    filter.type is not ExtensionRef
                                  rule: '!(has(self.extensionRef) && self.type !=
                                    ''ExtensionRef'')'
                                - message: filter.extensionRef must be specified for
                                    ExtensionRef filter.type
                                  rule: '!(!has(self.extensionRef) && self.type ==
                                    ''ExtensionRef'')'
                              maxItems: 16
                              type: array
                              x-kubernetes-validations:
                              - message: May specify either httpRouteFilterRequestRedirect
                                  or httpRouteFilterRequestRewrite, but not both
                                rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                  && self.exists(f, f.type == ''URLRewrite''))'
                              - message: RequestHeaderModifier filter cannot be repeated
                                rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                  <= 1
                              - message: ResponseHeaderModifier filter cannot be repeated
                                rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                  <= 1
                              - message: RequestRedirect filter cannot be repeated
                                rule: self.filter(f, f.type == 'RequestRedirect').size()
                                  <= 1
                              - message: URLRewrite filter cannot be repeated
                                rule: self.filter(f, f.type == 'URLRewrite').size()
                                  <= 1
                            matches:
                              default:
                              - path:
                                  type: PathPrefix
                                  value: /
                              description: |-
                                Matches define conditions used for matching the rule against incoming
                                HTTP requests. Each match is independent, i.e. this rule will be matched
                                if **any** one of the matches is satisfied.


                                For example, take the following matches configuration:


                                ```
                                matches:
                                - path:
                                    value: "/foo"
                                  headers:
                                  - name: "version"
                                    value: "v2"
                                - path:
                                    value: "/v2/foo"
                                ```


                                For a request to match against this rule, a request must satisfy
                                EITHER of the two conditions:


                                - path prefixed with `/foo` AND contains the header `version: v2`
                                - path prefix of `/v2/foo`


                                See the documentation for HTTPRouteMatch on how to specify multiple
                                match conditions that should be ANDed together.


                                If no matches are specified, the default is a prefix
                                path match on "/", which has the effect of matching every
                                HTTP request.


                                Proxy or Load Balancer routing configuration generated from HTTPRoutes
                                MUST prioritize matches based on the following criteria, continuing on
                                ties. Across all rules specified on applicable Routes, precedence must be
                                given to the match having:


                                * "Exact" path match.
                                * "Prefix" path match with largest number of characters.
                                * Method match.
                                * Largest number of header matches.
                                * Largest number of query param matches.


                                Note: The precedence of RegularExpression path matches are implementation-specific.


                                If ties still exist across multiple Routes, matching precedence MUST be
                                determined in order of the following criteria, continuing on ties:


                                * The oldest Route based on creation timestamp.
                                * The Route appearing first in alphabetical order by
                                  "{namespace}/{name}".


                                If ties still exist within an HTTPRoute, matching precedence MUST be granted
                                to the FIRST matching rule (in list order) with a match meeting the above
                                criteria.


                                When no rules matching a request have been successfully attached to the
                                parent a request is coming from, a HTTP 404 status code MUST be returned.
                              items:
                                properties:
                                  headers:
                                    description: |-
                                      Headers specifies HTTP request header matchers. Multiple match values are
                                      ANDed together, meaning, a request must match all the specified headers
                                      to select the route.
                                    items:
                                      description: |-
                                        HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                        headers.
                                      properties:
                                        name:
                                          description: |-
                                            Name is the name of the HTTP Header to be matched. Name matching MUST be
                                            case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                            If multiple entries specify equivalent header names, only the first
                                            entry with an equivalent name MUST be considered for a match. Subsequent
                                            entries with an equivalent header name MUST be ignored. Due to the
                                            case-insensitivity of header names, "foo" and "Foo" are considered
                                            equivalent.


                                            When a header is repeated in an HTTP request, it is
                                            implementation-specific behavior as to how this is represented.
                                            Generally, proxies should follow the guidance from the RFC:
                                            https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                            processing a repeated header, with special handling for "Set-Cookie".
                                          maxLength: 256
                                          minLength: 1
                                          pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                          type: string
                                        type:
                                          default: Exact
                                          description: |-
                                            Type specifies how to match against the value of the header.


                                            Support: Core (Exact)


                                            Support: Implementation-specific (RegularExpression)


                                            Since RegularExpression HeaderMatchType has implementation-specific
                                            conformance, implementations can support POSIX, PCRE or any other dialects
                                            of regular expressions. Please read the implementation's documentation to
                                            determine the supported dialect.
                                          enum:
                                          - Exact
                                          - RegularExpression
                                          type: string
                                        value:
                                          description: Value is the value of HTTP
                                            Header to be matched.
                                          maxLength: 4096
                                          minLength: 1
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  queryParams:
                                    description: |-
                                      QueryParams specifies HTTP query parameter matchers. Multiple match
                                      values are ANDed together, meaning, a request must match all the
                                      specified query parameters to select the route.


                                      Support: Extended
                                    items:
                                      description: |-
                                        HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                        query parameters.
                                      properties:
                                        name:
                                          description: |-
                                            Name is the name of the HTTP query param to be matched. This must be an
                                            exact string match. (See
                                            https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                            If multiple entries specify equivalent query param names, only the first
                                            entry with an equivalent name MUST be considered for a match. Subsequent
                                            entries with an equivalent query param name MUST be ignored.


                                            If a query param is repeated in an HTTP request, the behavior is
                                            purposely left undefined, since different data planes have different
                                            capabilities. However, it is *recommended* that implementations should
                                            match against the first value of the param if the data plane supports it,
                                            as this behavior is expected in other load balancing contexts outside of
                                            the Gateway API.


                                            Users SHOULD NOT route traffic based on repeated query params to guard
                                            themselves against potential differences in the implementations.
                                          maxLength: 256
                                          minLength: 1
                                          pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                          type: string
                                        type:
                                          default: Exact
                                          description: |-
                                            Type specifies how to match against the value of the query parameter.


                                            Support: Extended (Exact)


                                            Support: Implementation-specific (RegularExpression)


                                            Since RegularExpression QueryParamMatchType has Implementation-specific
                                            conformance, implementations can support POSIX, PCRE or any other
                                            dialects of regular expressions. Please read the implementation's
                                            documentation to determine the supported dialect.
                                          enum:
                                          - Exact
                                          - RegularExpression
                                          type: string
                                        value:
                                          description: Value is the value of HTTP
                                            query param to be matched.
                                          maxLength: 1024
                                          minLength: 1
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    maxItems: 16
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                type: object
                              maxItems: 8
                              type: array
                            weight:
                              description: Weight indicate how many percentage of
                                traffic the canary pods should receive
                              format: int32
                              maximum: 100
                              minimum: 0
                              type: integer
                          type: object
                      type: object
                  required:
                  - replicas
                  type: object
                type: array
              toleration:
                description: Toleration is the toleration policy of the canary strategy
                properties:
                  initialDelaySeconds:
                    description: Number of seconds after the toleration check has
                      started before the task are initiated.
                    format: int32
                    type: integer
                  taskFailureThreshold:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      FailureThreshold indicates how many failed pods can be tolerated before marking the rollout task as success
                      If not set, the default value is 0, which means no failed pods can be tolerated
                      This is a task level threshold.
                    x-kubernetes-int-or-string: true
                  workloadTotalFailureThreshold:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      WorkloadFailureThreshold indicates how many failed pods can be tolerated in all upgraded pods of one workload.
                      The default value is 0, which means no failed pods can be tolerated.
                      This is a workload level threshold.
                    x-kubernetes-int-or-string: true
                type: object
            type: object
          canary:
            description: Canary defines the canary strategy for upgrade and operation
            properties:
              matchTargets:
                description: Match defines condition used for matching resource cross
                  clusterset
                properties:
                  names:
                    description: Names is a list of workload name
                    items:
                      description: CrossClusterObjectNameReference contains cluster
                        and name reference to a k8s object
                      properties:
                        cluster:
                          description: Cluster indicates the name of cluster
                          type: string
                        name:
                          description: Name is the resource name
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  selector:
                    description: Selector is a label query over a set of resources,
                      in this case resource
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: |-
                            A label selector requirement is a selector that contains values, a key, and an operator that
                            relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: |-
                                operator represents a key's relationship to a set of values.
                                Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: |-
                                values is an array of string values. If the operator is In or NotIn,
                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced during a strategic
                                merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              podTemplateMetadataPatch:
                description: PodTemplateMetadataPatch defines a patch for workload
                  podTemplate metadata.
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: Annotations are additional metadata that can be included.
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels are additional metadata that can be included.
                    type: object
                type: object
              properties:
                additionalProperties:
                  type: string
                description: Properties contains additional information for step
                type: object
              replicas:
                anyOf:
                - type: integer
                - type: string
                description: Replicas is the replicas of the rollout task, which represents
                  the number of pods to be upgraded
                x-kubernetes-int-or-string: true
              traffic:
                description: traffic strategy
                properties:
                  http:
                    properties:
                      baseTraffic:
                        properties:
                          filters:
                            description: |-
                              Filters define the filters that are applied to requests that match
                              this rule.


                              The effects of ordering of multiple behaviors are currently unspecified.
                              This can change in the future based on feedback during the alpha stage.


                              Conformance-levels at this level are defined based on the type of filter:


                              - ALL core filters MUST be supported by all implementations.
                              - Implementers are encouraged to support extended filters.
                              - Implementation-specific custom filters have no API guarantees across
                                implementations.


                              Specifying the same filter multiple times is not supported unless explicitly
                              indicated in the filter.


                              All filters are expected to be compatible with each other except for the
                              URLRewrite and RequestRedirect filters, which may not be combined. If an
                              implementation can not support other combinations of filters, they must clearly
                              document that limitation. In cases where incompatible or unsupported
                              filters are specified and cause the `Accepted` condition to be set to status
                              `False`, implementations may use the `IncompatibleFilters` reason to specify
                              this configuration error.


                              Support: Core
                            items:
                              description: |-
                                HTTPRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.


                                <gateway:experimental:validation:XValidation:message="filter.cors must be nil if the filter.type is not CORS",rule="!(has(self.cors) && self.type != 'CORS')">
                                <gateway:experimental:validation:XValidation:message="filter.cors must be specified for CORS filter.type",rule="!(!has(self.cors) && self.type == 'CORS')">
                              properties:
                                cors:
                                  description: |-
                                    CORS defines a schema for a filter that responds to the
                                    cross-origin request based on HTTP response header.


                                    Support: Extended


                                    <gateway:experimental>
                                  properties:
                                    allowCredentials:
                                      description: |-
                                        AllowCredentials indicates whether the actual cross-origin request allows
                                        to include credentials.


                                        The only valid value for the `Access-Control-Allow-Credentials` response
                                        header is true (case-sensitive).


                                        If the credentials are not allowed in cross-origin requests, the gateway
                                        will omit the header `Access-Control-Allow-Credentials` entirely rather
                                        than setting its value to false.


                                        Support: Extended
                                      enum:
                                      - true
                                      type: boolean
                                    allowHeaders:
                                      description: |-
                                        AllowHeaders indicates which HTTP request headers are supported for
                                        accessing the requested resource.


                                        Header names are not case sensitive.


                                        Multiple header names in the value of the `Access-Control-Allow-Headers`
                                        response header are separated by a comma (",").


                                        When the `AllowHeaders` field is configured with one or more headers, the
                                        gateway must return the `Access-Control-Allow-Headers` response header
                                        which value is present in the `AllowHeaders` field.


                                        If any header name in the `Access-Control-Request-Headers` request header
                                        is not included in the list of header names specified by the response
                                        header `Access-Control-Allow-Headers`, it will present an error on the
                                        client side.


                                        If any header name in the `Access-Control-Allow-Headers` response header
                                        does not recognize by the client, it will also occur an error on the
                                        client side.


                                        A wildcard indicates that the requests with all HTTP headers are allowed.
                                        The `Access-Control-Allow-Headers` response header can only use `*`
                                        wildcard as value when the `AllowCredentials` field is unspecified.


                                        When the `AllowCredentials` field is specified and `AllowHeaders` field
                                        specified with the `*` wildcard, the gateway must specify one or more
                                        HTTP headers in the value of the `Access-Control-Allow-Headers` response
                                        header. The value of the header `Access-Control-Allow-Headers` is same as
                                        the `Access-Control-Request-Headers` header provided by the client. If
                                        the header `Access-Control-Request-Headers` is not included in the
                                        request, the gateway will omit the `Access-Control-Allow-Headers`
                                        response header, instead of specifying the `*` wildcard. A Gateway
                                        implementation may choose to add implementation-specific default headers.


                                        Support: Extended
                                      items:
                                        description: |-
                                          HTTPHeaderName is the name of an HTTP header.


                                          Valid values include:


                                          * "Authorization"
                                          * "Set-Cookie"


                                          Invalid values include:


                                            - ":method" - ":" is an invalid character. This means that HTTP/2 pseudo
                                              headers are not currently supported by this type.
                                            - "/invalid" - "/ " is an invalid character
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      maxItems: 64
                                      type: array
                                      x-kubernetes-list-type: set
                                    allowMethods:
                                      description: |-
                                        AllowMethods indicates which HTTP methods are supported for accessing the
                                        requested resource.


                                        Valid values are any method defined by RFC9110, along with the special
                                        value `*`, which represents all HTTP methods are allowed.


                                        Method names are case sensitive, so these values are also case-sensitive.
                                        (See https://www.rfc-editor.org/rfc/rfc2616#section-5.1.1)


                                        Multiple method names in the value of the `Access-Control-Allow-Methods`
                                        response header are separated by a comma (",").


                                        A CORS-safelisted method is a method that is `GET`, `HEAD`, or `POST`.
                                        (See https://fetch.spec.whatwg.org/#cors-safelisted-method) The
                                        CORS-safelisted methods are always allowed, regardless of whether they
                                        are specified in the `AllowMethods` field.


                                        When the `AllowMethods` field is configured with one or more methods, the
                                        gateway must return the `Access-Control-Allow-Methods` response header
                                        which value is present in the `AllowMethods` field.


                                        If the HTTP method of the `Access-Control-Request-Method` request header
                                        is not included in the list of methods specified by the response header
                                        `Access-Control-Allow-Methods`, it will present an error on the client
                                        side.


                                        The `Access-Control-Allow-Methods` response header can only use `*`
                                        wildcard as value when the `AllowCredentials` field is unspecified.


                                        When the `AllowCredentials` field is specified and `AllowMethods` field
                                        specified with the `*` wildcard, the gateway must specify one HTTP method
                                        in the value of the Access-Control-Allow-Methods response header. The
                                        value of the header `Access-Control-Allow-Methods` is same as the
                                        `Access-Control-Request-Method` header provided by the client. If the
                                        header `Access-Control-Request-Method` is not included in the request,
                                        the gateway will omit the `Access-Control-Allow-Methods` response header,
                                        instead of specifying the `*` wildcard. A Gateway implementation may
                                        choose to add implementation-specific default methods.


                                        Support: Extended
                                      items:
                                        enum:
                                        - GET
                                        - HEAD
                                        - POST
                                        - PUT
                                        - DELETE
                                        - CONNECT
                                        - OPTIONS
                                        - TRACE
                                        - PATCH
                                        - '*'
                                        type: string
                                      maxItems: 9
                                      type: array
                                      x-kubernetes-list-type: set
                                      x-kubernetes-validations:
                                      - message: AllowMethods cannot contain '*' alongside
                                          other methods
                                        rule: '!(''*'' in self && self.size() > 1)'
                                    allowOrigins:
                                      description: |-
                                        AllowOrigins indicates whether the response can be shared with requested
                                        resource from the given `Origin`.


                                        The `Origin` consists of a scheme and a host, with an optional port, and
                                        takes the form `<scheme>://<host>(:<port>)`.


                                        Valid values for scheme are: `http` and `https`.


                                        Valid values for port are any integer between 1 and 65535 (the list of
                                        available TCP/UDP ports). Note that, if not included, port `80` is
                                        assumed for `http` scheme origins, and port `443` is assumed for `https`
                                        origins. This may affect origin matching.


                                        The host part of the origin may contain the wildcard character `*`. These
                                        wildcard characters behave as follows:


                                        * `*` is a greedy match to the _left_, including any number of
                                          DNS labels to the left of its position. This also means that
                                          `*` will include any number of period `.` characters to the
                                          left of its position.
                                        * A wildcard by itself matches all hosts.


                                        An origin value that includes _only_ the `*` character indicates requests
                                        from all `Origin`s are allowed.


                                        When the `AllowOrigins` field is configured with multiple origins, it
                                        means the server supports clients from multiple origins. If the request
                                        `Origin` matches the configured allowed origins, the gateway must return
                                        the given `Origin` and sets value of the header
                                        `Access-Control-Allow-Origin` same as the `Origin` header provided by the
                                        client.


                                        The status code of a successful response to a "preflight" request is
                                        always an OK status (i.e., 204 or 200).


                                        If the request `Origin` does not match the configured allowed origins,
                                        the gateway returns 204/200 response but doesn't set the relevant
                                        cross-origin response headers. Alternatively, the gateway responds with
                                        403 status to the "preflight" request is denied, coupled with omitting
                                        the CORS headers. The cross-origin request fails on the client side.
                                        Therefore, the client doesn't attempt the actual cross-origin request.


                                        The `Access-Control-Allow-Origin` response header can only use `*`
                                        wildcard as value when the `AllowCredentials` field is unspecified.


                                        When the `AllowCredentials` field is specified and `AllowOrigins` field
                                        specified with the `*` wildcard, the gateway must return a single origin
                                        in the value of the `Access-Control-Allow-Origin` response header,
                                        instead of specifying the `*` wildcard. The value of the header
                                        `Access-Control-Allow-Origin` is same as the `Origin` header provided by
                                        the client.


                                        Support: Extended
                                      items:
                                        description: |-
                                          The AbsoluteURI MUST NOT be a relative URI, and it MUST follow the URI syntax and
                                          encoding rules specified in RFC3986.  The AbsoluteURI MUST include both a
                                          scheme (e.g., "http" or "spiffe") and a scheme-specific-part.  URIs that
                                          include an authority MUST include a fully qualified domain name or
                                          IP address as the host.
                                          <gateway:util:excludeFromCRD> The below regex is taken from the regex section in RFC 3986 with a slight modification to enforce a full URI and not relative. </gateway:util:excludeFromCRD>
                                        maxLength: 253
                                        minLength: 1
                                        pattern: ^(([^:/?#]+):)(//([^/?#]*))([^?#]*)(\?([^#]*))?(#(.*))?
                                        type: string
                                      maxItems: 64
                                      type: array
                                      x-kubernetes-list-type: set
                                    exposeHeaders:
                                      description: |-
                                        ExposeHeaders indicates which HTTP response headers can be exposed
                                        to client-side scripts in response to a cross-origin request.


                                        A CORS-safelisted response header is an HTTP header in a CORS response
                                        that it is considered safe to expose to the client scripts.
                                        The CORS-safelisted response headers include the following headers:
                                        `Cache-Control`
                                        `Content-Language`
                                        `Content-Length`
                                        `Content-Type`
                                        `Expires`
                                        `Last-Modified`
                                        `Pragma`
                                        (See https://fetch.spec.whatwg.org/#cors-safelisted-response-header-name)
                                        The CORS-safelisted response headers are exposed to client by default.


                                        When an HTTP header name is specified using the `ExposeHeaders` field,
                                        this additional header will be exposed as part of the response to the
                                        client.


                                        Header names are not case sensitive.


                                        Multiple header names in the value of the `Access-Control-Expose-Headers`
                                        response header are separated by a comma (",").


                                        A wildcard indicates that the responses with all HTTP headers are exposed
                                        to clients. The `Access-Control-Expose-Headers` response header can only
                                        use `*` wildcard as value when the `AllowCredentials` field is
                                        unspecified.


                                        Support: Extended
                                      items:
                                        description: |-
                                          HTTPHeaderName is the name of an HTTP header.


                                          Valid values include:


                                          * "Authorization"
                                          * "Set-Cookie"


                                          Invalid values include:


                                            - ":method" - ":" is an invalid character. This means that HTTP/2 pseudo
                                              headers are not currently supported by this type.
                                            - "/invalid" - "/ " is an invalid character
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      maxItems: 64
                                      type: array
                                      x-kubernetes-list-type: set
                                    maxAge:
                                      default: 5
                                      description: |-
                                        MaxAge indicates the duration (in seconds) for the client to cache the
                                        results of a "preflight" request.


                                        The information provided by the `Access-Control-Allow-Methods` and
                                        `Access-Control-Allow-Headers` response headers can be cached by the
                                        client until the time specified by `Access-Control-Max-Age` elapses.


                                        The default value of `Access-Control-Max-Age` response header is 5
                                        (seconds).
                                      format: int32
                                      minimum: 1
                                      type: integer
                                  type: object
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    This filter can be used multiple times within the same rule.


                                    Support: Implementation-specific
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                    fraction:
                                      description: |-
                                        Fraction represents the fraction of requests that should be
                                        mirrored to BackendRef.


                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.
                                      properties:
                                        denominator:
                                          default: 100
                                          format: int32
                                          minimum: 1
                                          type: integer
                                        numerator:
                                          format: int32
                                          minimum: 0
                                          type: integer
                                      required:
                                      - numerator
                                      type: object
                                      x-kubernetes-validations:
                                      - message: numerator must be less than or equal
                                          to denominator
                                        rule: self.numerator <= self.denominator
                                    percent:
                                      description: |-
                                        Percent represents the percentage of requests that should be
                                        mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                        requests) and its maximum value is 100 (indicating 100% of requests).


                                        Only one of Fraction or Percent may be specified. If neither field
                                        is specified, 100% of requests will be mirrored.
                                      format: int32
                                      maximum: 100
                                      minimum: 0
                                      type: integer
                                  required:
                                  - backendRef
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Only one of percent or fraction may be
                                      specified in HTTPRequestMirrorFilter
                                    rule: '!(has(self.percent) && has(self.fraction))'
                                requestRedirect:
                                  description: |-
                                    RequestRedirect defines a schema for a filter that responds to the
                                    request with an HTTP redirection.


                                    Support: Core
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the hostname to be used in the value of the `Location`
                                        header in the response.
                                        When empty, the hostname in the `Host` header of the request is used.


                                        Support: Core
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines parameters used to modify the path of the incoming request.
                                        The modified path is then used to construct the `Location` header. When
                                        empty, the request path is used as-is.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                    port:
                                      description: |-
                                        Port is the port to be used in the value of the `Location`
                                        header in the response.


                                        If no port is specified, the redirect port MUST be derived using the
                                        following rules:


                                        * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                          port associated with the redirect scheme. Specifically "http" to port 80
                                          and "https" to port 443. If the redirect scheme does not have a
                                          well-known port, the listener port of the Gateway SHOULD be used.
                                        * If redirect scheme is empty, the redirect port MUST be the Gateway
                                          Listener port.


                                        Implementations SHOULD NOT add the port number in the 'Location'
                                        header in the following cases:


                                        * A Location header that will use HTTP (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 80.
                                        * A Location header that will use HTTPS (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 443.


                                        Support: Extended
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: |-
                                        Scheme is the scheme to be used in the value of the `Location` header in
                                        the response. When empty, the scheme of the request is used.


                                        Scheme redirects can affect the port of the redirect, for more information,
                                        refer to the documentation for the port field of this filter.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Extended
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: |-
                                        StatusCode is the HTTP status code to be used in response.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Core
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |-
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations must support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by
                                      specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` should be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.


                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.


                                    <gateway:experimental:validation:Enum=RequestHeaderModifier;ResponseHeaderModifier;RequestMirror;RequestRedirect;URLRewrite;ExtensionRef;CORS>
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: |-
                                    URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                    Support: Extended
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the value to be used to replace the Host header value during
                                        forwarding.


                                        Support: Extended
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines a path rewrite.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                  type: object
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.requestRedirect must be nil if the
                                  filter.type is not RequestRedirect
                                rule: '!(has(self.requestRedirect) && self.type !=
                                  ''RequestRedirect'')'
                              - message: filter.requestRedirect must be specified
                                  for RequestRedirect filter.type
                                rule: '!(!has(self.requestRedirect) && self.type ==
                                  ''RequestRedirect'')'
                              - message: filter.urlRewrite must be nil if the filter.type
                                  is not URLRewrite
                                rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                              - message: filter.urlRewrite must be specified for URLRewrite
                                  filter.type
                                rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                            - message: RequestRedirect filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestRedirect').size()
                                <= 1
                            - message: URLRewrite filter cannot be repeated
                              rule: self.filter(f, f.type == 'URLRewrite').size()
                                <= 1
                          matches:
                            default:
                            - path:
                                type: PathPrefix
                                value: /
                            description: |-
                              Matches define conditions used for matching the rule against incoming
                              HTTP requests. Each match is independent, i.e. this rule will be matched
                              if **any** one of the matches is satisfied.


                              For example, take the following matches configuration:


                              ```
                              matches:
                              - path:
                                  value: "/foo"
                                headers:
                                - name: "version"
                                  value: "v2"
                              - path:
                                  value: "/v2/foo"
                              ```


                              For a request to match against this rule, a request must satisfy
                              EITHER of the two conditions:


                              - path prefixed with `/foo` AND contains the header `version: v2`
                              - path prefix of `/v2/foo`


                              See the documentation for HTTPRouteMatch on how to specify multiple
                              match conditions that should be ANDed together.


                              If no matches are specified, the default is a prefix
                              path match on "/", which has the effect of matching every
                              HTTP request.


                              Proxy or Load Balancer routing configuration generated from HTTPRoutes
                              MUST prioritize matches based on the following criteria, continuing on
                              ties. Across all rules specified on applicable Routes, precedence must be
                              given to the match having:


                              * "Exact" path match.
                              * "Prefix" path match with largest number of characters.
                              * Method match.
                              * Largest number of header matches.
                              * Largest number of query param matches.


                              Note: The precedence of RegularExpression path matches are implementation-specific.


                              If ties still exist across multiple Routes, matching precedence MUST be
                              determined in order of the following criteria, continuing on ties:


                              * The oldest Route based on creation timestamp.
                              * The Route appearing first in alphabetical order by
                                "{namespace}/{name}".


                              If ties still exist within an HTTPRoute, matching precedence MUST be granted
                              to the FIRST matching rule (in list order) with a match meeting the above
                              criteria.


                              When no rules matching a request have been successfully attached to the
                              parent a request is coming from, a HTTP 404 status code MUST be returned.
                            items:
                              properties:
                                headers:
                                  description: |-
                                    Headers specifies HTTP request header matchers. Multiple match values are
                                    ANDed together, meaning, a request must match all the specified headers
                                    to select the route.
                                  items:
                                    description: |-
                                      HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                      headers.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP Header to be matched. Name matching MUST be
                                          case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                          If multiple entries specify equivalent header names, only the first
                                          entry with an equivalent name MUST be considered for a match. Subsequent
                                          entries with an equivalent header name MUST be ignored. Due to the
                                          case-insensitivity of header names, "foo" and "Foo" are considered
                                          equivalent.


                                          When a header is repeated in an HTTP request, it is
                                          implementation-specific behavior as to how this is represented.
                                          Generally, proxies should follow the guidance from the RFC:
                                          https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                          processing a repeated header, with special handling for "Set-Cookie".
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      type:
                                        default: Exact
                                        description: |-
                                          Type specifies how to match against the value of the header.


                                          Support: Core (Exact)


                                          Support: Implementation-specific (RegularExpression)


                                          Since RegularExpression HeaderMatchType has implementation-specific
                                          conformance, implementations can support POSIX, PCRE or any other dialects
                                          of regular expressions. Please read the implementation's documentation to
                                          determine the supported dialect.
                                        enum:
                                        - Exact
                                        - RegularExpression
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header
                                          to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                queryParams:
                                  description: |-
                                    QueryParams specifies HTTP query parameter matchers. Multiple match
                                    values are ANDed together, meaning, a request must match all the
                                    specified query parameters to select the route.


                                    Support: Extended
                                  items:
                                    description: |-
                                      HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                      query parameters.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP query param to be matched. This must be an
                                          exact string match. (See
                                          https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                          If multiple entries specify equivalent query param names, only the first
                                          entry with an equivalent name MUST be considered for a match. Subsequent
                                          entries with an equivalent query param name MUST be ignored.


                                          If a query param is repeated in an HTTP request, the behavior is
                                          purposely left undefined, since different data planes have different
                                          capabilities. However, it is *recommended* that implementations should
                                          match against the first value of the param if the data plane supports it,
                                          as this behavior is expected in other load balancing contexts outside of
                                          the Gateway API.


                                          Users SHOULD NOT route traffic based on repeated query params to guard
                                          themselves against potential differences in the implementations.
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      type:
                                        default: Exact
                                        description: |-
                                          Type specifies how to match against the value of the query parameter.


                                          Support: Extended (Exact)


                                          Support: Implementation-specific (RegularExpression)


                                          Since RegularExpression QueryParamMatchType has Implementation-specific
                                          conformance, implementations can support POSIX, PCRE or any other
                                          dialects of regular expressions. Please read the implementation's
                                          documentation to determine the supported dialect.
                                        enum:
                                        - Exact
                                        - RegularExpression
                                        type: string
                                      value:
                                        description: Value is the value of HTTP query
                                          param to be matched.
                                        maxLength: 1024
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                              type: object
                            maxItems: 8
                            type: array
                        type: object
                      filters:
                        description: |-
                          Filters define the filters that are applied to requests that match
                          this rule.


                          The effects of ordering of multiple behaviors are currently unspecified.
                          This can change in the future based on feedback during the alpha stage.


                          Conformance-levels at this level are defined based on the type of filter:


                          - ALL core filters MUST be supported by all implementations.
                          - Implementers are encouraged to support extended filters.
                          - Implementation-specific custom filters have no API guarantees across
                            implementations.


                          Specifying the same filter multiple times is not supported unless explicitly
                          indicated in the filter.


                          All filters are expected to be compatible with each other except for the
                          URLRewrite and RequestRedirect filters, which may not be combined. If an
                          implementation can not support other combinations of filters, they must clearly
                          document that limitation. In cases where incompatible or unsupported
                          filters are specified and cause the `Accepted` condition to be set to status
                          `False`, implementations may use the `IncompatibleFilters` reason to specify
                          this configuration error.


                          Support: Core
                        items:
                          description: |-
                            HTTPRouteFilter defines processing steps that must be completed during the
                            request or response lifecycle. HTTPRouteFilters are meant as an extension
                            point to express processing that may be done in Gateway implementations. Some
                            examples include request or response modification, implementing
                            authentication strategies, rate-limiting, and traffic shaping. API
                            guarantee/conformance is defined based on the type of the filter.


                            <gateway:experimental:validation:XValidation:message="filter.cors must be nil if the filter.type is not CORS",rule="!(has(self.cors) && self.type != 'CORS')">
                            <gateway:experimental:validation:XValidation:message="filter.cors must be specified for CORS filter.type",rule="!(!has(self.cors) && self.type == 'CORS')">
                          properties:
                            cors:
                              description: |-
                                CORS defines a schema for a filter that responds to the
                                cross-origin request based on HTTP response header.


                                Support: Extended


                                <gateway:experimental>
                              properties:
                                allowCredentials:
                                  description: |-
                                    AllowCredentials indicates whether the actual cross-origin request allows
                                    to include credentials.


                                    The only valid value for the `Access-Control-Allow-Credentials` response
                                    header is true (case-sensitive).


                                    If the credentials are not allowed in cross-origin requests, the gateway
                                    will omit the header `Access-Control-Allow-Credentials` entirely rather
                                    than setting its value to false.


                                    Support: Extended
                                  enum:
                                  - true
                                  type: boolean
                                allowHeaders:
                                  description: |-
                                    AllowHeaders indicates which HTTP request headers are supported for
                                    accessing the requested resource.


                                    Header names are not case sensitive.


                                    Multiple header names in the value of the `Access-Control-Allow-Headers`
                                    response header are separated by a comma (",").


                                    When the `AllowHeaders` field is configured with one or more headers, the
                                    gateway must return the `Access-Control-Allow-Headers` response header
                                    which value is present in the `AllowHeaders` field.


                                    If any header name in the `Access-Control-Request-Headers` request header
                                    is not included in the list of header names specified by the response
                                    header `Access-Control-Allow-Headers`, it will present an error on the
                                    client side.


                                    If any header name in the `Access-Control-Allow-Headers` response header
                                    does not recognize by the client, it will also occur an error on the
                                    client side.


                                    A wildcard indicates that the requests with all HTTP headers are allowed.
                                    The `Access-Control-Allow-Headers` response header can only use `*`
                                    wildcard as value when the `AllowCredentials` field is unspecified.


                                    When the `AllowCredentials` field is specified and `AllowHeaders` field
                                    specified with the `*` wildcard, the gateway must specify one or more
                                    HTTP headers in the value of the `Access-Control-Allow-Headers` response
                                    header. The value of the header `Access-Control-Allow-Headers` is same as
                                    the `Access-Control-Request-Headers` header provided by the client. If
                                    the header `Access-Control-Request-Headers` is not included in the
                                    request, the gateway will omit the `Access-Control-Allow-Headers`
                                    response header, instead of specifying the `*` wildcard. A Gateway
                                    implementation may choose to add implementation-specific default headers.


                                    Support: Extended
                                  items:
                                    description: |-
                                      HTTPHeaderName is the name of an HTTP header.


                                      Valid values include:


                                      * "Authorization"
                                      * "Set-Cookie"


                                      Invalid values include:


                                        - ":method" - ":" is an invalid character. This means that HTTP/2 pseudo
                                          headers are not currently supported by this type.
                                        - "/invalid" - "/ " is an invalid character
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                    type: string
                                  maxItems: 64
                                  type: array
                                  x-kubernetes-list-type: set
                                allowMethods:
                                  description: |-
                                    AllowMethods indicates which HTTP methods are supported for accessing the
                                    requested resource.


                                    Valid values are any method defined by RFC9110, along with the special
                                    value `*`, which represents all HTTP methods are allowed.


                                    Method names are case sensitive, so these values are also case-sensitive.
                                    (See https://www.rfc-editor.org/rfc/rfc2616#section-5.1.1)


                                    Multiple method names in the value of the `Access-Control-Allow-Methods`
                                    response header are separated by a comma (",").


                                    A CORS-safelisted method is a method that is `GET`, `HEAD`, or `POST`.
                                    (See https://fetch.spec.whatwg.org/#cors-safelisted-method) The
                                    CORS-safelisted methods are always allowed, regardless of whether they
                                    are specified in the `AllowMethods` field.


                                    When the `AllowMethods` field is configured with one or more methods, the
                                    gateway must return the `Access-Control-Allow-Methods` response header
                                    which value is present in the `AllowMethods` field.


                                    If the HTTP method of the `Access-Control-Request-Method` request header
                                    is not included in the list of methods specified by the response header
                                    `Access-Control-Allow-Methods`, it will present an error on the client
                                    side.


                                    The `Access-Control-Allow-Methods` response header can only use `*`
                                    wildcard as value when the `AllowCredentials` field is unspecified.


                                    When the `AllowCredentials` field is specified and `AllowMethods` field
                                    specified with the `*` wildcard, the gateway must specify one HTTP method
                                    in the value of the Access-Control-Allow-Methods response header. The
                                    value of the header `Access-Control-Allow-Methods` is same as the
                                    `Access-Control-Request-Method` header provided by the client. If the
                                    header `Access-Control-Request-Method` is not included in the request,
                                    the gateway will omit the `Access-Control-Allow-Methods` response header,
                                    instead of specifying the `*` wildcard. A Gateway implementation may
                                    choose to add implementation-specific default methods.


                                    Support: Extended
                                  items:
                                    enum:
                                    - GET
                                    - HEAD
                                    - POST
                                    - PUT
                                    - DELETE
                                    - CONNECT
                                    - OPTIONS
                                    - TRACE
                                    - PATCH
                                    - '*'
                                    type: string
                                  maxItems: 9
                                  type: array
                                  x-kubernetes-list-type: set
                                  x-kubernetes-validations:
                                  - message: AllowMethods cannot contain '*' alongside
                                      other methods
                                    rule: '!(''*'' in self && self.size() > 1)'
                                allowOrigins:
                                  description: |-
                                    AllowOrigins indicates whether the response can be shared with requested
                                    resource from the given `Origin`.


                                    The `Origin` consists of a scheme and a host, with an optional port, and
                                    takes the form `<scheme>://<host>(:<port>)`.


                                    Valid values for scheme are: `http` and `https`.


                                    Valid values for port are any integer between 1 and 65535 (the list of
                                    available TCP/UDP ports). Note that, if not included, port `80` is
                                    assumed for `http` scheme origins, and port `443` is assumed for `https`
                                    origins. This may affect origin matching.


                                    The host part of the origin may contain the wildcard character `*`. These
                                    wildcard characters behave as follows:


                                    * `*` is a greedy match to the _left_, including any number of
                                      DNS labels to the left of its position. This also means that
                                      `*` will include any number of period `.` characters to the
                                      left of its position.
                                    * A wildcard by itself matches all hosts.


                                    An origin value that includes _only_ the `*` character indicates requests
                                    from all `Origin`s are allowed.


                                    When the `AllowOrigins` field is configured with multiple origins, it
                                    means the server supports clients from multiple origins. If the request
                                    `Origin` matches the configured allowed origins, the gateway must return
                                    the given `Origin` and sets value of the header
                                    `Access-Control-Allow-Origin` same as the `Origin` header provided by the
                                    client.


                                    The status code of a successful response to a "preflight" request is
                                    always an OK status (i.e., 204 or 200).


                                    If the request `Origin` does not match the configured allowed origins,
                                    the gateway returns 204/200 response but doesn't set the relevant
                                    cross-origin response headers. Alternatively, the gateway responds with
                                    403 status to the "preflight" request is denied, coupled with omitting
                                    the CORS headers. The cross-origin request fails on the client side.
                                    Therefore, the client doesn't attempt the actual cross-origin request.


                                    The `Access-Control-Allow-Origin` response header can only use `*`
                                    wildcard as value when the `AllowCredentials` field is unspecified.


                                    When the `AllowCredentials` field is specified and `AllowOrigins` field
                                    specified with the `*` wildcard, the gateway must return a single origin
                                    in the value of the `Access-Control-Allow-Origin` response header,
                                    instead of specifying the `*` wildcard. The value of the header
                                    `Access-Control-Allow-Origin` is same as the `Origin` header provided by
                                    the client.


                                    Support: Extended
                                  items:
                                    description: |-
                                      The AbsoluteURI MUST NOT be a relative URI, and it MUST follow the URI syntax and
                                      encoding rules specified in RFC3986.  The AbsoluteURI MUST include both a
                                      scheme (e.g., "http" or "spiffe") and a scheme-specific-part.  URIs that
                                      include an authority MUST include a fully qualified domain name or
                                      IP address as the host.
                                      <gateway:util:excludeFromCRD> The below regex is taken from the regex section in RFC 3986 with a slight modification to enforce a full URI and not relative. </gateway:util:excludeFromCRD>
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^(([^:/?#]+):)(//([^/?#]*))([^?#]*)(\?([^#]*))?(#(.*))?
                                    type: string
                                  maxItems: 64
                                  type: array
                                  x-kubernetes-list-type: set
                                exposeHeaders:
                                  description: |-
                                    ExposeHeaders indicates which HTTP response headers can be exposed
                                    to client-side scripts in response to a cross-origin request.


                                    A CORS-safelisted response header is an HTTP header in a CORS response
                                    that it is considered safe to expose to the client scripts.
                                    The CORS-safelisted response headers include the following headers:
                                    `Cache-Control`
                                    `Content-Language`
                                    `Content-Length`
                                    `Content-Type`
                                    `Expires`
                                    `Last-Modified`
                                    `Pragma`
                                    (See https://fetch.spec.whatwg.org/#cors-safelisted-response-header-name)
                                    The CORS-safelisted response headers are exposed to client by default.


                                    When an HTTP header name is specified using the `ExposeHeaders` field,
                                    this additional header will be exposed as part of the response to the
                                    client.


                                    Header names are not case sensitive.


                                    Multiple header names in the value of the `Access-Control-Expose-Headers`
                                    response header are separated by a comma (",").


                                    A wildcard indicates that the responses with all HTTP headers are exposed
                                    to clients. The `Access-Control-Expose-Headers` response header can only
                                    use `*` wildcard as value when the `AllowCredentials` field is
                                    unspecified.


                                    Support: Extended
                                  items:
                                    description: |-
                                      HTTPHeaderName is the name of an HTTP header.


                                      Valid values include:


                                      * "Authorization"
                                      * "Set-Cookie"


                                      Invalid values include:


                                        - ":method" - ":" is an invalid character. This means that HTTP/2 pseudo
                                          headers are not currently supported by this type.
                                        - "/invalid" - "/ " is an invalid character
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                    type: string
                                  maxItems: 64
                                  type: array
                                  x-kubernetes-list-type: set
                                maxAge:
                                  default: 5
                                  description: |-
                                    MaxAge indicates the duration (in seconds) for the client to cache the
                                    results of a "preflight" request.


                                    The information provided by the `Access-Control-Allow-Methods` and
                                    `Access-Control-Allow-Headers` response headers can be cached by the
                                    client until the time specified by `Access-Control-Max-Age` elapses.


                                    The default value of `Access-Control-Max-Age` response header is 5
                                    (seconds).
                                  format: int32
                                  minimum: 1
                                  type: integer
                              type: object
                            extensionRef:
                              description: |-
                                ExtensionRef is an optional, implementation-specific extension to the
                                "filter" behavior.  For example, resource "myroutefilter" in group
                                "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                extended filters.


                                This filter can be used multiple times within the same rule.


                                Support: Implementation-specific
                              properties:
                                group:
                                  description: |-
                                    Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                    When unspecified or empty string, core API group is inferred.
                                  maxLength: 253
                                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                kind:
                                  description: Kind is kind of the referent. For example
                                    "HTTPRoute" or "Service".
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                  type: string
                                name:
                                  description: Name is the name of the referent.
                                  maxLength: 253
                                  minLength: 1
                                  type: string
                              required:
                              - group
                              - kind
                              - name
                              type: object
                            requestHeaderModifier:
                              description: |-
                                RequestHeaderModifier defines a schema for a filter that modifies request
                                headers.


                                Support: Core
                              properties:
                                add:
                                  description: |-
                                    Add adds the given header(s) (name, value) to the request
                                    before the action. It appends to any existing values associated
                                    with the header name.


                                    Input:
                                      GET /foo HTTP/1.1
                                      my-header: foo


                                    Config:
                                      add:
                                      - name: "my-header"
                                        value: "bar,baz"


                                    Output:
                                      GET /foo HTTP/1.1
                                      my-header: foo,bar,baz
                                  items:
                                    description: HTTPHeader represents an HTTP Header
                                      name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP Header to be matched. Name matching MUST be
                                          case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                          If multiple entries specify equivalent header names, the first entry with
                                          an equivalent name MUST be considered for a match. Subsequent entries
                                          with an equivalent header name MUST be ignored. Due to the
                                          case-insensitivity of header names, "foo" and "Foo" are considered
                                          equivalent.
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header
                                          to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                remove:
                                  description: |-
                                    Remove the given header(s) from the HTTP request before the action. The
                                    value of Remove is a list of HTTP header names. Note that the header
                                    names are case-insensitive (see
                                    https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                    Input:
                                      GET /foo HTTP/1.1
                                      my-header1: foo
                                      my-header2: bar
                                      my-header3: baz


                                    Config:
                                      remove: ["my-header1", "my-header3"]


                                    Output:
                                      GET /foo HTTP/1.1
                                      my-header2: bar
                                  items:
                                    type: string
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-type: set
                                set:
                                  description: |-
                                    Set overwrites the request with the given header (name, value)
                                    before the action.


                                    Input:
                                      GET /foo HTTP/1.1
                                      my-header: foo


                                    Config:
                                      set:
                                      - name: "my-header"
                                        value: "bar"


                                    Output:
                                      GET /foo HTTP/1.1
                                      my-header: bar
                                  items:
                                    description: HTTPHeader represents an HTTP Header
                                      name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP Header to be matched. Name matching MUST be
                                          case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                          If multiple entries specify equivalent header names, the first entry with
                                          an equivalent name MUST be considered for a match. Subsequent entries
                                          with an equivalent header name MUST be ignored. Due to the
                                          case-insensitivity of header names, "foo" and "Foo" are considered
                                          equivalent.
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header
                                          to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                              type: object
                            requestMirror:
                              description: |-
                                RequestMirror defines a schema for a filter that mirrors requests.
                                Requests are sent to the specified destination, but responses from
                                that destination are ignored.


                                This filter can be used multiple times within the same rule. Note that
                                not all implementations will be able to support mirroring to multiple
                                backends.


                                Support: Extended
                              properties:
                                backendRef:
                                  description: |-
                                    BackendRef references a resource where mirrored requests are sent.


                                    Mirrored requests must be sent only to a single destination endpoint
                                    within this BackendRef, irrespective of how many endpoints are present
                                    within this BackendRef.


                                    If the referent cannot be found, this BackendRef is invalid and must be
                                    dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                    condition on the Route status is set to `status: False` and not configure
                                    this backend in the underlying implementation.


                                    If there is a cross-namespace reference to an *existing* object
                                    that is not allowed by a ReferenceGrant, the controller must ensure the
                                    "ResolvedRefs"  condition on the Route is set to `status: False`,
                                    with the "RefNotPermitted" reason and not configure this backend in the
                                    underlying implementation.


                                    In either error case, the Message of the `ResolvedRefs` Condition
                                    should be used to provide more detail about the problem.


                                    Support: Extended for Kubernetes Service


                                    Support: Implementation-specific for any other resource
                                  properties:
                                    group:
                                      default: ""
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      default: Service
                                      description: |-
                                        Kind is the Kubernetes resource kind of the referent. For example
                                        "Service".


                                        Defaults to "Service" when not specified.


                                        ExternalName services can refer to CNAME DNS records that may live
                                        outside of the cluster and as such are difficult to reason about in
                                        terms of conformance. They also may not be safe to forward to (see
                                        CVE-2021-25740 for more information). Implementations SHOULD NOT
                                        support ExternalName Services.


                                        Support: Core (Services with a type other than ExternalName)


                                        Support: Implementation-specific (Services with type ExternalName)
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace is the namespace of the backend. When unspecified, the local
                                        namespace is inferred.


                                        Note that when a namespace different than the local namespace is specified,
                                        a ReferenceGrant object is required in the referent namespace to allow that
                                        namespace's owner to accept the reference. See the ReferenceGrant
                                        documentation for details.


                                        Support: Core
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                      type: string
                                    port:
                                      description: |-
                                        Port specifies the destination port number to use for this resource.
                                        Port is required when the referent is a Kubernetes Service. In this
                                        case, the port number is the service port number, not the target port.
                                        For other resources, destination port might be derived from the referent
                                        resource or this field.
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  required:
                                  - name
                                  type: object
                                  x-kubernetes-validations:
                                  - message: Must have port for Service reference
                                    rule: '(size(self.group) == 0 && self.kind ==
                                      ''Service'') ? has(self.port) : true'
                                fraction:
                                  description: |-
                                    Fraction represents the fraction of requests that should be
                                    mirrored to BackendRef.


                                    Only one of Fraction or Percent may be specified. If neither field
                                    is specified, 100% of requests will be mirrored.
                                  properties:
                                    denominator:
                                      default: 100
                                      format: int32
                                      minimum: 1
                                      type: integer
                                    numerator:
                                      format: int32
                                      minimum: 0
                                      type: integer
                                  required:
                                  - numerator
                                  type: object
                                  x-kubernetes-validations:
                                  - message: numerator must be less than or equal
                                      to denominator
                                    rule: self.numerator <= self.denominator
                                percent:
                                  description: |-
                                    Percent represents the percentage of requests that should be
                                    mirrored to BackendRef. Its minimum value is 0 (indicating 0% of
                                    requests) and its maximum value is 100 (indicating 100% of requests).


                                    Only one of Fraction or Percent may be specified. If neither field
                                    is specified, 100% of requests will be mirrored.
                                  format: int32
                                  maximum: 100
                                  minimum: 0
                                  type: integer
                              required:
                              - backendRef
                              type: object
                              x-kubernetes-validations:
                              - message: Only one of percent or fraction may be specified
                                  in HTTPRequestMirrorFilter
                                rule: '!(has(self.percent) && has(self.fraction))'
                            requestRedirect:
                              description: |-
                                RequestRedirect defines a schema for a filter that responds to the
                                request with an HTTP redirection.


                                Support: Core
                              properties:
                                hostname:
                                  description: |-
                                    Hostname is the hostname to be used in the value of the `Location`
                                    header in the response.
                                    When empty, the hostname in the `Host` header of the request is used.


                                    Support: Core
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                path:
                                  description: |-
                                    Path defines parameters used to modify the path of the incoming request.
                                    The modified path is then used to construct the `Location` header. When
                                    empty, the request path is used as-is.


                                    Support: Extended
                                  properties:
                                    replaceFullPath:
                                      description: |-
                                        ReplaceFullPath specifies the value with which to replace the full path
                                        of a request during a rewrite or redirect.
                                      maxLength: 1024
                                      type: string
                                    replacePrefixMatch:
                                      description: |-
                                        ReplacePrefixMatch specifies the value with which to replace the prefix
                                        match of a request during a rewrite or redirect. For example, a request
                                        to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                        of "/xyz" would be modified to "/xyz/bar".


                                        Note that this matches the behavior of the PathPrefix match type. This
                                        matches full path elements. A path element refers to the list of labels
                                        in the path split by the `/` separator. When specified, a trailing `/` is
                                        ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                        match the prefix `/abc`, but the path `/abcd` would not.


                                        ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                        Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                        the implementation setting the Accepted Condition for the Route to `status: False`.


                                        Request Path | Prefix Match | Replace Prefix | Modified Path
                                        -------------|--------------|----------------|----------
                                        /foo/bar     | /foo         | /xyz           | /xyz/bar
                                        /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                        /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                        /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                        /foo         | /foo         | /xyz           | /xyz
                                        /foo/        | /foo         | /xyz           | /xyz/
                                        /foo/bar     | /foo         | <empty string> | /bar
                                        /foo/        | /foo         | <empty string> | /
                                        /foo         | /foo         | <empty string> | /
                                        /foo/        | /foo         | /              | /
                                        /foo         | /foo         | /              | /
                                      maxLength: 1024
                                      type: string
                                    type:
                                      description: |-
                                        Type defines the type of path modifier. Additional types may be
                                        added in a future release of the API.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.
                                      enum:
                                      - ReplaceFullPath
                                      - ReplacePrefixMatch
                                      type: string
                                  required:
                                  - type
                                  type: object
                                  x-kubernetes-validations:
                                  - message: replaceFullPath must be specified when
                                      type is set to 'ReplaceFullPath'
                                    rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                      : true'
                                  - message: type must be 'ReplaceFullPath' when replaceFullPath
                                      is set
                                    rule: 'has(self.replaceFullPath) ? self.type ==
                                      ''ReplaceFullPath'' : true'
                                  - message: replacePrefixMatch must be specified
                                      when type is set to 'ReplacePrefixMatch'
                                    rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                      : true'
                                  - message: type must be 'ReplacePrefixMatch' when
                                      replacePrefixMatch is set
                                    rule: 'has(self.replacePrefixMatch) ? self.type
                                      == ''ReplacePrefixMatch'' : true'
                                port:
                                  description: |-
                                    Port is the port to be used in the value of the `Location`
                                    header in the response.


                                    If no port is specified, the redirect port MUST be derived using the
                                    following rules:


                                    * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                      port associated with the redirect scheme. Specifically "http" to port 80
                                      and "https" to port 443. If the redirect scheme does not have a
                                      well-known port, the listener port of the Gateway SHOULD be used.
                                    * If redirect scheme is empty, the redirect port MUST be the Gateway
                                      Listener port.


                                    Implementations SHOULD NOT add the port number in the 'Location'
                                    header in the following cases:


                                    * A Location header that will use HTTP (whether that is determined via
                                      the Listener protocol or the Scheme field) _and_ use port 80.
                                    * A Location header that will use HTTPS (whether that is determined via
                                      the Listener protocol or the Scheme field) _and_ use port 443.


                                    Support: Extended
                                  format: int32
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                scheme:
                                  description: |-
                                    Scheme is the scheme to be used in the value of the `Location` header in
                                    the response. When empty, the scheme of the request is used.


                                    Scheme redirects can affect the port of the redirect, for more information,
                                    refer to the documentation for the port field of this filter.


                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.


                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.


                                    Support: Extended
                                  enum:
                                  - http
                                  - https
                                  type: string
                                statusCode:
                                  default: 302
                                  description: |-
                                    StatusCode is the HTTP status code to be used in response.


                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.


                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.


                                    Support: Core
                                  enum:
                                  - 301
                                  - 302
                                  type: integer
                              type: object
                            responseHeaderModifier:
                              description: |-
                                ResponseHeaderModifier defines a schema for a filter that modifies response
                                headers.


                                Support: Extended
                              properties:
                                add:
                                  description: |-
                                    Add adds the given header(s) (name, value) to the request
                                    before the action. It appends to any existing values associated
                                    with the header name.


                                    Input:
                                      GET /foo HTTP/1.1
                                      my-header: foo


                                    Config:
                                      add:
                                      - name: "my-header"
                                        value: "bar,baz"


                                    Output:
                                      GET /foo HTTP/1.1
                                      my-header: foo,bar,baz
                                  items:
                                    description: HTTPHeader represents an HTTP Header
                                      name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP Header to be matched. Name matching MUST be
                                          case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                          If multiple entries specify equivalent header names, the first entry with
                                          an equivalent name MUST be considered for a match. Subsequent entries
                                          with an equivalent header name MUST be ignored. Due to the
                                          case-insensitivity of header names, "foo" and "Foo" are considered
                                          equivalent.
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header
                                          to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                remove:
                                  description: |-
                                    Remove the given header(s) from the HTTP request before the action. The
                                    value of Remove is a list of HTTP header names. Note that the header
                                    names are case-insensitive (see
                                    https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                    Input:
                                      GET /foo HTTP/1.1
                                      my-header1: foo
                                      my-header2: bar
                                      my-header3: baz


                                    Config:
                                      remove: ["my-header1", "my-header3"]


                                    Output:
                                      GET /foo HTTP/1.1
                                      my-header2: bar
                                  items:
                                    type: string
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-type: set
                                set:
                                  description: |-
                                    Set overwrites the request with the given header (name, value)
                                    before the action.


                                    Input:
                                      GET /foo HTTP/1.1
                                      my-header: foo


                                    Config:
                                      set:
                                      - name: "my-header"
                                        value: "bar"


                                    Output:
                                      GET /foo HTTP/1.1
                                      my-header: bar
                                  items:
                                    description: HTTPHeader represents an HTTP Header
                                      name and value as defined by RFC 7230.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the HTTP Header to be matched. Name matching MUST be
                                          case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                          If multiple entries specify equivalent header names, the first entry with
                                          an equivalent name MUST be considered for a match. Subsequent entries
                                          with an equivalent header name MUST be ignored. Due to the
                                          case-insensitivity of header names, "foo" and "Foo" are considered
                                          equivalent.
                                        maxLength: 256
                                        minLength: 1
                                        pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                        type: string
                                      value:
                                        description: Value is the value of HTTP Header
                                          to be matched.
                                        maxLength: 4096
                                        minLength: 1
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 16
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                              type: object
                            type:
                              description: |-
                                Type identifies the type of filter to apply. As with other API fields,
                                types are classified into three conformance levels:


                                - Core: Filter types and their corresponding configuration defined by
                                  "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                  implementations must support core filters.


                                - Extended: Filter types and their corresponding configuration defined by
                                  "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                  are encouraged to support extended filters.


                                - Implementation-specific: Filters that are defined and supported by
                                  specific vendors.
                                  In the future, filters showing convergence in behavior across multiple
                                  implementations will be considered for inclusion in extended or core
                                  conformance levels. Filter-specific configuration for such filters
                                  is specified using the ExtensionRef field. `Type` should be set to
                                  "ExtensionRef" for custom filters.


                                Implementers are encouraged to define custom implementation types to
                                extend the core API with implementation-specific behavior.


                                If a reference to a custom filter type cannot be resolved, the filter
                                MUST NOT be skipped. Instead, requests that would have been processed by
                                that filter MUST receive a HTTP error response.


                                Note that values may be added to this enum, implementations
                                must ensure that unknown values will not cause a crash.


                                Unknown values here must result in the implementation setting the
                                Accepted Condition for the Route to `status: False`, with a
                                Reason of `UnsupportedValue`.


                                <gateway:experimental:validation:Enum=RequestHeaderModifier;ResponseHeaderModifier;RequestMirror;RequestRedirect;URLRewrite;ExtensionRef;CORS>
                              enum:
                              - RequestHeaderModifier
                              - ResponseHeaderModifier
                              - RequestMirror
                              - RequestRedirect
                              - URLRewrite
                              - ExtensionRef
                              type: string
                            urlRewrite:
                              description: |-
                                URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                Support: Extended
                              properties:
                                hostname:
                                  description: |-
                                    Hostname is the value to be used to replace the Host header value during
                                    forwarding.


                                    Support: Extended
                                  maxLength: 253
                                  minLength: 1
                                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                  type: string
                                path:
                                  description: |-
                                    Path defines a path rewrite.


                                    Support: Extended
                                  properties:
                                    replaceFullPath:
                                      description: |-
                                        ReplaceFullPath specifies the value with which to replace the full path
                                        of a request during a rewrite or redirect.
                                      maxLength: 1024
                                      type: string
                                    replacePrefixMatch:
                                      description: |-
                                        ReplacePrefixMatch specifies the value with which to replace the prefix
                                        match of a request during a rewrite or redirect. For example, a request
                                        to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                        of "/xyz" would be modified to "/xyz/bar".


                                        Note that this matches the behavior of the PathPrefix match type. This
                                        matches full path elements. A path element refers to the list of labels
                                        in the path split by the `/` separator. When specified, a trailing `/` is
                                        ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                        match the prefix `/abc`, but the path `/abcd` would not.


                                        ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                        Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                        the implementation setting the Accepted Condition for the Route to `status: False`.


                                        Request Path | Prefix Match | Replace Prefix | Modified Path
                                        -------------|--------------|----------------|----------
                                        /foo/bar     | /foo         | /xyz           | /xyz/bar
                                        /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                        /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                        /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                        /foo         | /foo         | /xyz           | /xyz
                                        /foo/        | /foo         | /xyz           | /xyz/
                                        /foo/bar     | /foo         | <empty string> | /bar
                                        /foo/        | /foo         | <empty string> | /
                                        /foo         | /foo         | <empty string> | /
                                        /foo/        | /foo         | /              | /
                                        /foo         | /foo         | /              | /
                                      maxLength: 1024
                                      type: string
                                    type:
                                      description: |-
                                        Type defines the type of path modifier. Additional types may be
                                        added in a future release of the API.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.
                                      enum:
                                      - ReplaceFullPath
                                      - ReplacePrefixMatch
                                      type: string
                                  required:
                                  - type
                                  type: object
                                  x-kubernetes-validations:
                                  - message: replaceFullPath must be specified when
                                      type is set to 'ReplaceFullPath'
                                    rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                      : true'
                                  - message: type must be 'ReplaceFullPath' when replaceFullPath
                                      is set
                                    rule: 'has(self.replaceFullPath) ? self.type ==
                                      ''ReplaceFullPath'' : true'
                                  - message: replacePrefixMatch must be specified
                                      when type is set to 'ReplacePrefixMatch'
                                    rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                      : true'
                                  - message: type must be 'ReplacePrefixMatch' when
                                      replacePrefixMatch is set
                                    rule: 'has(self.replacePrefixMatch) ? self.type
                                      == ''ReplacePrefixMatch'' : true'
                              type: object
                          required:
                          - type
                          type: object
                          x-kubernetes-validations:
                          - message: filter.requestHeaderModifier must be nil if the
                              filter.type is not RequestHeaderModifier
                            rule: '!(has(self.requestHeaderModifier) && self.type
                              != ''RequestHeaderModifier'')'
                          - message: filter.requestHeaderModifier must be specified
                              for RequestHeaderModifier filter.type
                            rule: '!(!has(self.requestHeaderModifier) && self.type
                              == ''RequestHeaderModifier'')'
                          - message: filter.responseHeaderModifier must be nil if
                              the filter.type is not ResponseHeaderModifier
                            rule: '!(has(self.responseHeaderModifier) && self.type
                              != ''ResponseHeaderModifier'')'
                          - message: filter.responseHeaderModifier must be specified
                              for ResponseHeaderModifier filter.type
                            rule: '!(!has(self.responseHeaderModifier) && self.type
                              == ''ResponseHeaderModifier'')'
                          - message: filter.requestMirror must be nil if the filter.type
                              is not RequestMirror
                            rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                          - message: filter.requestMirror must be specified for RequestMirror
                              filter.type
                            rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                          - message: filter.requestRedirect must be nil if the filter.type
                              is not RequestRedirect
                            rule: '!(has(self.requestRedirect) && self.type != ''RequestRedirect'')'
                          - message: filter.requestRedirect must be specified for
                              RequestRedirect filter.type
                            rule: '!(!has(self.requestRedirect) && self.type == ''RequestRedirect'')'
                          - message: filter.urlRewrite must be nil if the filter.type
                              is not URLRewrite
                            rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                          - message: filter.urlRewrite must be specified for URLRewrite
                              filter.type
                            rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                          - message: filter.extensionRef must be nil if the filter.type
                              is not ExtensionRef
                            rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                          - message: filter.extensionRef must be specified for ExtensionRef
                              filter.type
                            rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                        maxItems: 16
                        type: array
                        x-kubernetes-validations:
                        - message: May specify either httpRouteFilterRequestRedirect
                            or httpRouteFilterRequestRewrite, but not both
                          rule: '!(self.exists(f, f.type == ''RequestRedirect'') &&
                            self.exists(f, f.type == ''URLRewrite''))'
                        - message: RequestHeaderModifier filter cannot be repeated
                          rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                            <= 1
                        - message: ResponseHeaderModifier filter cannot be repeated
                          rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                            <= 1
                        - message: RequestRedirect filter cannot be repeated
                          rule: self.filter(f, f.type == 'RequestRedirect').size()
                            <= 1
                        - message: URLRewrite filter cannot be repeated
                          rule: self.filter(f, f.type == 'URLRewrite').size() <= 1
                      matches:
                        default:
                        - path:
                            type: PathPrefix
                            value: /
                        description: |-
                          Matches define conditions used for matching the rule against incoming
                          HTTP requests. Each match is independent, i.e. this rule will be matched
                          if **any** one of the matches is satisfied.


                          For example, take the following matches configuration:


                          ```
                          matches:
                          - path:
                              value: "/foo"
                            headers:
                            - name: "version"
                              value: "v2"
                          - path:
                              value: "/v2/foo"
                          ```


                          For a request to match against this rule, a request must satisfy
                          EITHER of the two conditions:


                          - path prefixed with `/foo` AND contains the header `version: v2`
                          - path prefix of `/v2/foo`


                          See the documentation for HTTPRouteMatch on how to specify multiple
                          match conditions that should be ANDed together.


                          If no matches are specified, the default is a prefix
                          path match on "/", which has the effect of matching every
                          HTTP request.


                          Proxy or Load Balancer routing configuration generated from HTTPRoutes
                          MUST prioritize matches based on the following criteria, continuing on
                          ties. Across all rules specified on applicable Routes, precedence must be
                          given to the match having:


                          * "Exact" path match.
                          * "Prefix" path match with largest number of characters.
                          * Method match.
                          * Largest number of header matches.
                          * Largest number of query param matches.


                          Note: The precedence of RegularExpression path matches are implementation-specific.


                          If ties still exist across multiple Routes, matching precedence MUST be
                          determined in order of the following criteria, continuing on ties:


                          * The oldest Route based on creation timestamp.
                          * The Route appearing first in alphabetical order by
                            "{namespace}/{name}".


                          If ties still exist within an HTTPRoute, matching precedence MUST be granted
                          to the FIRST matching rule (in list order) with a match meeting the above
                          criteria.


                          When no rules matching a request have been successfully attached to the
                          parent a request is coming from, a HTTP 404 status code MUST be returned.
                        items:
                          properties:
                            headers:
                              description: |-
                                Headers specifies HTTP request header matchers. Multiple match values are
                                ANDed together, meaning, a request must match all the specified headers
                                to select the route.
                              items:
                                description: |-
                                  HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                  headers.
                                properties:
                                  name:
                                    description: |-
                                      Name is the name of the HTTP Header to be matched. Name matching MUST be
                                      case-insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                      If multiple entries specify equivalent header names, only the first
                                      entry with an equivalent name MUST be considered for a match. Subsequent
                                      entries with an equivalent header name MUST be ignored. Due to the
                                      case-insensitivity of header names, "foo" and "Foo" are considered
                                      equivalent.


                                      When a header is repeated in an HTTP request, it is
                                      implementation-specific behavior as to how this is represented.
                                      Generally, proxies should follow the guidance from the RFC:
                                      https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                      processing a repeated header, with special handling for "Set-Cookie".
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                    type: string
                                  type:
                                    default: Exact
                                    description: |-
                                      Type specifies how to match against the value of the header.


                                      Support: Core (Exact)


                                      Support: Implementation-specific (RegularExpression)


                                      Since RegularExpression HeaderMatchType has implementation-specific
                                      conformance, implementations can support POSIX, PCRE or any other dialects
                                      of regular expressions. Please read the implementation's documentation to
                                      determine the supported dialect.
                                    enum:
                                    - Exact
                                    - RegularExpression
                                    type: string
                                  value:
                                    description: Value is the value of HTTP Header
                                      to be matched.
                                    maxLength: 4096
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              maxItems: 16
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            queryParams:
                              description: |-
                                QueryParams specifies HTTP query parameter matchers. Multiple match
                                values are ANDed together, meaning, a request must match all the
                                specified query parameters to select the route.


                                Support: Extended
                              items:
                                description: |-
                                  HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                  query parameters.
                                properties:
                                  name:
                                    description: |-
                                      Name is the name of the HTTP query param to be matched. This must be an
                                      exact string match. (See
                                      https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                      If multiple entries specify equivalent query param names, only the first
                                      entry with an equivalent name MUST be considered for a match. Subsequent
                                      entries with an equivalent query param name MUST be ignored.


                                      If a query param is repeated in an HTTP request, the behavior is
                                      purposely left undefined, since different data planes have different
                                      capabilities. However, it is *recommended* that implementations should
                                      match against the first value of the param if the data plane supports it,
                                      as this behavior is expected in other load balancing contexts outside of
                                      the Gateway API.


                                      Users SHOULD NOT route traffic based on repeated query params to guard
                                      themselves against potential differences in the implementations.
                                    maxLength: 256
                                    minLength: 1
                                    pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                    type: string
                                  type:
                                    default: Exact
                                    description: |-
                                      Type specifies how to match against the value of the query parameter.


                                      Support: Extended (Exact)


                                      Support: Implementation-specific (RegularExpression)


                                      Since RegularExpression QueryParamMatchType has Implementation-specific
                                      conformance, implementations can support POSIX, PCRE or any other
                                      dialects of regular expressions. Please read the implementation's
                                      documentation to determine the supported dialect.
                                    enum:
                                    - Exact
                                    - RegularExpression
                                    type: string
                                  value:
                                    description: Value is the value of HTTP query
                                      param to be matched.
                                    maxLength: 1024
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              maxItems: 16
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                          type: object
                        maxItems: 8
                        type: array
                      weight:
                        description: Weight indicate how many percentage of traffic
                          the canary pods should receive
                        format: int32
                        maximum: 100
                        minimum: 0
                        type: integer
                    type: object
                type: object
            required:
            - replicas
            type: object
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          webhooks:
            description: Webhooks defines
            items:
              properties:
                clientConfig:
                  description: |-
                    ClientConfig defines how to communicate with the hook.
                    Required
                  properties:
                    caBundle:
                      description: |-
                        `caBundle` is a PEM encoded CA bundle which will be used to validate the webhook's server certificate.
                        If unspecified, system trust roots' CA on the node.
                      format: byte
                      type: string
                    periodSeconds:
                      default: 10
                      description: |-
                        How often (in seconds) to perform the probe.
                        Default to 10 seconds. Minimum value is 1.
                      format: int32
                      minimum: 1
                      type: integer
                    timeoutSeconds:
                      default: 10
                      description: |-
                        TimeoutSeconds specifies the timeout for this webhook. After the timeout passes,
                        the webhook call will be ignored or the API call will fail based on the
                        failure policy.
                      format: int32
                      type: integer
                    url:
                      description: |-
                        `url` gives the location of the webhook, in standard URL form
                        (`scheme://host:port/path`). Exactly one of `url` or `service`
                        must be specified.


                        The `host` should not refer to a service running in the cluster; use
                        the `service` field instead. The host might be resolved via external
                        DNS in some apiservers (e.g., `kube-apiserver` cannot resolve
                        in-cluster DNS as that would be a layering violation). `host` may
                        also be an IP address.


                        Please note that using `localhost` or `127.0.0.1` as a `host` is
                        risky unless you take great care to run this webhook on all hosts
                        which run an apiserver which might need to make calls to this
                        webhook. Such installs are likely to be non-portable, i.e., not easy
                        to turn up in a new cluster.


                        The scheme must be "https"; the URL must begin with "https://".


                        A path is optional, and if present may be any string permissible in
                        a URL. You may use the path to pass an arbitrary string to the
                        webhook, for example, a cluster identifier.


                        Attempting to use a user or basic auth e.g. "user:password@" is not
                        allowed. Fragments ("#...") and query parameters ("?...") are not
                        allowed, either.
                      type: string
                  type: object
                failurePolicy:
                  description: |-
                    FailurePolicy defines how unrecognized errors from the admission endpoint are handled -
                    allowed values are Ignore or Fail. Defaults to Ignore.
                  type: string
                failureThreshold:
                  default: 3
                  description: |-
                    Minimum consecutive failures for the probe to be considered failed after having succeeded.
                    Defaults to 3. Minimum value is 1.
                  format: int32
                  minimum: 1
                  type: integer
                hookTypes:
                  description: |-
                    HookTypes defines when to communicate with the hook, specifies the types of events
                    that trigger the webhook.
                    Required
                  items:
                    description: Webhook type
                    type: string
                  type: array
                name:
                  description: Name is the identity of webhook
                  type: string
                properties:
                  additionalProperties:
                    type: string
                  description: Properties provide additional data for webhook.
                  type: object
                provider:
                  description: |-
                    By default, rollout communicates with the webhook through the structure RolloutWebhookReview.
                    If provider is set, then the protocol of the interaction will be determined by the provider
                  type: string
              type: object
            type: array
        type: object
    served: true
    storage: true
